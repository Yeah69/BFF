<UserControl x:Class="BFF.MVVM.Views.TitDataGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:forModels="clr-namespace:BFF.MVVM.ViewModels.ForModels"
             xmlns:helper="clr-namespace:BFF.Helper"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:mvvm="clr-namespace:BFF.MVVM"
             xmlns:structure="clr-namespace:BFF.MVVM.ViewModels.ForModels.Structure"
             x:Name="Root"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/controls.datagrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/controls.checkbox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/controls.combobox.xaml" />
                <ResourceDictionary Source="/MVVM/Resources/BFF_ModifiedMAMCheckBox.xaml" />
                <ResourceDictionary Source="/MVVM/Resources/CategoryTemplate.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="IndentedCategoryItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="4"
                               Height="16"
                               Margin="{Binding Depth, Converter={x:Static mvvm:Converters.CategoryDepthToMargin}}">
                        <Rectangle.Style>
                            <Style TargetType="{x:Type Rectangle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Converter={x:Static mvvm:Converters.OfType}, ConverterParameter={x:Type forModels:IncomeCategoryViewModel}}"
                                                 Value="True">
                                        <Setter Property="Fill"
                                                Value="{StaticResource IncomeBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Fill"
                                        Value="{DynamicResource AccentColorBrush}" />
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                    <TextBlock Text="{Binding Name.Value}" />
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="CategoryItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="4"
                               Height="16"
                               Margin="0,0,5,0">
                        <Rectangle.Style>
                            <Style TargetType="{x:Type Rectangle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Converter={x:Static mvvm:Converters.OfType}, ConverterParameter={x:Type forModels:IncomeCategoryViewModel}}"
                                                 Value="True">
                                        <Setter Property="Fill"
                                                Value="{StaticResource IncomeBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Fill"
                                        Value="{DynamicResource AccentColorBrush}" />
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                    <TextBlock Margin="0,0,5,0"
                               Text="{Binding Name.Value}" />
                </StackPanel>
            </DataTemplate>

            <iconPacks:PackIconMaterialKind x:Key="TransactionIcon">
                Logout
            </iconPacks:PackIconMaterialKind>
            <iconPacks:PackIconMaterialKind x:Key="IncomeIcon">
                Login
            </iconPacks:PackIconMaterialKind>
            <iconPacks:PackIconMaterialKind x:Key="TransferIcon">
                ShuffleVariant
            </iconPacks:PackIconMaterialKind>
            <iconPacks:PackIconMaterialKind x:Key="PlaceholderIcon">
                ClockFast
            </iconPacks:PackIconMaterialKind>
            <iconPacks:PackIconMaterialKind x:Key="ParentIcon">
                Sitemap
            </iconPacks:PackIconMaterialKind>
            <iconPacks:PackIconMaterialKind x:Key="AddToTableIcon">
                TableRowPlusAfter
            </iconPacks:PackIconMaterialKind>
            <iconPacks:PackIconMaterialKind x:Key="RemoveFromTableIcon">
                TableRowRemove
            </iconPacks:PackIconMaterialKind>
            <iconPacks:PackIconMaterialKind x:Key="FlagIcon">
                Bookmark
            </iconPacks:PackIconMaterialKind>

            <Style x:Key="CellContent"
                   TargetType="ContentControl">
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="MinHeight"
                        Value="30" />
                <Setter Property="IsTabStop"
                        Value="False" />
            </Style>

            <Style x:Key="CellIconMaterial"
                   TargetType="iconPacks:PackIconMaterial">
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="Height"
                        Value="{StaticResource IconSize}" />
                <Setter Property="Width"
                        Value="{StaticResource IconSize}" />
            </Style>

            <ContextMenu x:Key="RowMenu">
                <MenuItem Command="{Binding DeleteCommand}"
                          Header="{lex:Loc AccountView_ConMenu_Delete}">
                    <MenuItem.Icon>
                        <iconPacks:PackIconMaterial Width="{StaticResource IconSize}"
                                                    Height="{StaticResource IconSize}"
                                                    Foreground="{StaticResource BlackBrush}"
                                                    Kind="{StaticResource RemoveFromTableIcon}" />
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>

            <Style x:Key="DefaultRowStyle"
                   BasedOn="{StaticResource MetroDataGridRow}"
                   TargetType="{x:Type DataGridRow}">
                <Setter Property="ContextMenu"
                        Value="{StaticResource RowMenu}" />
            </Style>

            <Style BasedOn="{StaticResource MetroDataGridCell}"
                   TargetType="{x:Type DataGridCell}">
                <Setter Property="IsTabStop"
                        Value="False" />
            </Style>

            <Style BasedOn="{StaticResource {x:Type ContentControl}}"
                   TargetType="{x:Type ContentControl}">
                <Setter Property="IsTabStop"
                        Value="False" />
            </Style>

            <Style BasedOn="{StaticResource MetroDataGrid}"
                   TargetType="{x:Type DataGrid}">
                <Setter Property="AlternatingRowBackground"
                        Value="{DynamicResource AlternatingRowBrush}" />
                <Setter Property="AutoGenerateColumns"
                        Value="False" />
                <Setter Property="CanUserSortColumns"
                        Value="False" />
                <Setter Property="CanUserAddRows"
                        Value="False" />
                <Setter Property="CanUserDeleteRows"
                        Value="False" />
                <Setter Property="EnableRowVirtualization"
                        Value="True" />
                <Setter Property="EnableColumnVirtualization"
                        Value="True" />
                <Setter Property="VirtualizingStackPanel.IsVirtualizing"
                        Value="True" />
                <Setter Property="VirtualizingStackPanel.VirtualizationMode"
                        Value="Recycling" />
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="True" />
            </Style>

            <!--  ColumnTemplates  -->

            <!--  Symbol  -->
            <DataTemplate x:Key="SymbolColumnTemplate">
                <ContentControl Content="{Binding}"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type forModels:TransactionViewModel}">
                            <iconPacks:PackIconMaterial>
                                <iconPacks:PackIconMaterial.Style>
                                    <Style BasedOn="{StaticResource CellIconMaterial}"
                                           TargetType="{x:Type iconPacks:PackIconMaterial}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Category.Value, Converter={x:Static mvvm:Converters.OfType}, ConverterParameter={x:Type forModels:IncomeCategoryViewModel}}"
                                                         Value="True">
                                                <Setter Property="Kind"
                                                        Value="{StaticResource IncomeIcon}" />
                                                <Setter Property="Foreground"
                                                        Value="{DynamicResource IncomeBrush}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Kind"
                                                Value="{StaticResource TransactionIcon}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource TransactionBrush}" />
                                    </Style>
                                </iconPacks:PackIconMaterial.Style>
                            </iconPacks:PackIconMaterial>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:ParentTransactionViewModel}">
                            <iconPacks:PackIconMaterial Foreground="{DynamicResource TransactionBrush}"
                                                        Kind="{StaticResource TransactionIcon}"
                                                        Style="{StaticResource CellIconMaterial}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <iconPacks:PackIconMaterial Foreground="{DynamicResource TransferBrush}"
                                                        Kind="{StaticResource TransferIcon}"
                                                        Style="{StaticResource CellIconMaterial}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}">
                            <iconPacks:PackIconMaterial Foreground="{DynamicResource BlackBrush}"
                                                        Kind="{StaticResource PlaceholderIcon}"
                                                        Style="{StaticResource CellIconMaterial}" />
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!--  Account  -->
            <DataTemplate x:Key="AccountColumnTemplate">
                <ContentControl Content="{Binding}"
                                IsTabStop="True"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransactionBaseViewModel}">
                            <TextBlock Style="{StaticResource CellTextBlock}"
                                       Text="{Binding Account.Value.Name.Value}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <TextBlock Foreground="{DynamicResource GrayBrush4}"
                                       Style="{StaticResource CellTextBlock}"
                                       Text="{lex:Loc AccountView_Column_Transfer}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <DataTemplate x:Key="AccountEditingColumnTemplate">
                <ContentControl Content="{Binding}"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransactionBaseViewModel}">
                            <ComboBox DisplayMemberPath="Name.Value"
                                      IsEditable="True"
                                      IsTextSearchCaseSensitive="False"
                                      IsTextSearchEnabled="True"
                                      ItemsSource="{Binding AllAccounts}"
                                      TextSearch.TextPath="Name.Value">
                                <ComboBox.SelectedItem>
                                    <Binding Mode="TwoWay"
                                             Path="Account.Value"
                                             UpdateSourceTrigger="LostFocus" />
                                </ComboBox.SelectedItem>
                            </ComboBox>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <TextBlock Foreground="{DynamicResource GrayBrush4}"
                                       Style="{StaticResource CellTextBlock}"
                                       Text="{lex:Loc AccountView_Column_Transfer}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!--  Date  -->
            <DataTemplate x:Key="DateColumnTemplate">
                <ContentControl Content="{Binding}"
                                IsTabStop="True"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransBaseViewModel}">
                            <TextBlock Style="{StaticResource CellTextBlock}"
                                       Text="{Binding Date.Value, Converter={x:Static mvvm:Converters.DateTimeToString}}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <DataTemplate x:Key="DateEditingColumnTemplate">
                <ContentControl Content="{Binding}"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransBaseViewModel}">
                            <DatePicker VerticalContentAlignment="Center"
                                        SelectedDate="{Binding Date.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedDateFormat="{Binding DataContext.IsDateLong, ElementName=LayoutRoot, Converter={x:Static mvvm:Converters.BooleanToDatePickerFormat}}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!--  Flag  -->
            <DataTemplate x:Key="FlagColumnTemplate">
                <ContentControl Content="{Binding}"
                                IsTabStop="True"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransBaseViewModel}">
                            <ContentControl Content="{Binding}">
                                <ContentControl.Style>
                                    <Style BasedOn="{StaticResource {x:Type ContentControl}}"
                                           TargetType="{x:Type ContentControl}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Flag.Value}"
                                                         Value="{x:Null}">
                                                <Setter Property="Visibility"
                                                        Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                                <ContentControl.ContentTemplate>
                                    <DataTemplate>
                                        <iconPacks:PackIconMaterial Foreground="{Binding Flag.Value.Color.Value}"
                                                                    Kind="{StaticResource FlagIcon}"
                                                                    Style="{StaticResource CellIconMaterial}" />
                                    </DataTemplate>
                                </ContentControl.ContentTemplate>
                            </ContentControl>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <DataTemplate x:Key="FlagEditingColumnTemplate">
                <ContentControl Content="{Binding}"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransBaseViewModel}">
                            <DockPanel LastChildFill="True">
                                <Button Command="{Binding RemoveFlag}"
                                        Content="X"
                                        DockPanel.Dock="Right"
                                        TabIndex="1">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource {x:Type Button}}"
                                               TargetType="{x:Type Button}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Flag.Value}"
                                                             Value="{x:Null}">
                                                    <Setter Property="Visibility"
                                                            Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <ComboBox HorizontalAlignment="Stretch"
                                          DockPanel.Dock="Left"
                                          ItemsSource="{Binding AllFlags}"
                                          SelectedItem="{Binding Mode=TwoWay, Path=Flag.Value, UpdateSourceTrigger=LostFocus}"
                                          TabIndex="0">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <iconPacks:PackIconMaterial Foreground="{Binding Color.Value}"
                                                                            Kind="{StaticResource FlagIcon}"
                                                                            Style="{StaticResource CellIconMaterial}" />
                                                <TextBlock Margin="5,0,0,0"
                                                           Text="{Binding Name.Value}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </DockPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!--  CheckNumber  -->
            <DataTemplate x:Key="CheckNumberColumnTemplate">
                <ContentControl Content="{Binding}"
                                IsTabStop="True"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransBaseViewModel}">
                            <TextBlock Style="{StaticResource CellTextBlock}"
                                       Text="{Binding CheckNumber.Value}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <DataTemplate x:Key="CheckNumberEditingColumnTemplate">
                <ContentControl Content="{Binding}"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransBaseViewModel}">
                            <TextBox VerticalAlignment="Stretch"
                                     VerticalContentAlignment="Center"
                                     Text="{Binding CheckNumber.Value, UpdateSourceTrigger=LostFocus}"
                                     TextWrapping="NoWrap" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!--  Payee  -->
            <DataTemplate x:Key="PayeeColumnTemplate">
                <ContentControl HorizontalAlignment="Stretch"
                                Content="{Binding}"
                                IsTabStop="True"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransactionBaseViewModel}">
                            <TextBlock Style="{StaticResource CellTextBlock}"
                                       Text="{Binding Payee.Value.Name.Value}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{StaticResource CellTextBlock}"
                                           Text="{Binding FromAccount.Value.Name.Value}" />
                                <iconPacks:PackIconMaterial Foreground="{DynamicResource GrayBrush4}"
                                                            Kind="{StaticResource TransactionIcon}"
                                                            Style="{StaticResource CellIconMaterial}" />
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <DataTemplate x:Key="PayeeEditingColumnTemplate">
                <ContentControl HorizontalAlignment="Stretch"
                                Content="{Binding}"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransactionBaseViewModel}">
                            <DockPanel LastChildFill="True">
                                <Button Click="PayeeOpenPopup_OnClick"
                                        DockPanel.Dock="Right"
                                        TabIndex="1"
                                        ToolTip="{lex:Loc CreateNewPayee}">
                                    <iconPacks:PackIconMaterial Foreground="{DynamicResource BlackColorBrush}"
                                                                Kind="{StaticResource AddIcon}"
                                                                Style="{StaticResource CellIconMaterial}" />
                                </Button>
                                <Popup x:Name="Popup"
                                       Closed="Popup_OnClosed"
                                       Opened="Popup_OnOpened"
                                       Placement="Right"
                                       PlacementTarget="{Binding ElementName=EditPayeeComboBox}"
                                       PopupAnimation="Slide"
                                       PreviewKeyDown="Popup_OnPreviewKeyDown"
                                       StaysOpen="False">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Margin="5,0,5,0"
                                                       VerticalAlignment="Center"
                                                       Text="{lex:LocText NameOfNewPayee,
                                                                          Suffix=:}" />
                                            <TextBox x:Name="FocusMe"
                                                     MinWidth="50"
                                                     BorderBrush="{StaticResource AccentColorBrush}"
                                                     Focusable="True"
                                                     Text="{Binding NewPayeeViewModel.PayeeText.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                        <Button HorizontalAlignment="Right"
                                                Click="PayeeClosePopup_OnClick"
                                                Command="{Binding NewPayeeViewModel.AddPayeeCommand}"
                                                ToolTip="{lex:Loc CreateNewPayee}">
                                            <iconPacks:PackIconMaterial Foreground="{DynamicResource BlackColorBrush}"
                                                                        Kind="{StaticResource AddIcon}"
                                                                        Style="{StaticResource CellIconMaterial}" />
                                        </Button>
                                    </StackPanel>
                                </Popup>
                                <ComboBox x:Name="EditPayeeComboBox"
                                          HorizontalAlignment="Stretch"
                                          DisplayMemberPath="Name.Value"
                                          IsEditable="True"
                                          IsTextSearchCaseSensitive="True"
                                          IsTextSearchEnabled="True"
                                          ItemsSource="{Binding NewPayeeViewModel.AllPayees}"
                                          TabIndex="0"
                                          TextSearch.TextPath="Name.Value">
                                    <ComboBox.SelectedItem>
                                        <Binding Mode="TwoWay"
                                                 Path="Payee.Value"
                                                 UpdateSourceTrigger="LostFocus">
                                            <Binding.ValidationRules>
                                                <x:Static Member="mvvm:Rules.EmptyPayee" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </ComboBox.SelectedItem>
                                </ComboBox>
                            </DockPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <ComboBox DisplayMemberPath="Name.Value"
                                      IsEditable="True"
                                      IsTextSearchCaseSensitive="False"
                                      IsTextSearchEnabled="True"
                                      ItemsSource="{Binding AllAccounts}"
                                      TextSearch.TextPath="Name.Value">
                                <ComboBox.SelectedItem>
                                    <Binding Mode="TwoWay"
                                             Path="FromAccount.Value"
                                             UpdateSourceTrigger="LostFocus" />
                                </ComboBox.SelectedItem>
                            </ComboBox>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!--  Category  -->
            <DataTemplate x:Key="CategoryColumnTemplate">
                <ContentControl Content="{Binding}"
                                IsTabStop="True"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransLikeViewModel}">
                            <ContentControl Content="{Binding Category.Value}">
                                <ContentControl.Resources>
                                    <DataTemplate DataType="{x:Type forModels:CategoryViewModel}">
                                        <TextBlock Style="{StaticResource CellTextBlock}"
                                                   Text="{Binding Name.Value}">
                                            <TextBlock.ToolTip>
                                                <ToolTip>
                                                    <ListBox ItemTemplate="{StaticResource CategoryItemTemplate}"
                                                             ItemsSource="{Binding FullChainOfCategories}">
                                                        <ListBox.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <StackPanel Orientation="Horizontal" />
                                                            </ItemsPanelTemplate>
                                                        </ListBox.ItemsPanel>
                                                    </ListBox>
                                                </ToolTip>
                                            </TextBlock.ToolTip>
                                        </TextBlock>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type forModels:IncomeCategoryViewModel}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Style="{StaticResource CellTextBlock}"
                                                       Text="{Binding Name.Value}">
                                                <TextBlock.ToolTip>
                                                    <ToolTip>
                                                        <ListBox ItemTemplate="{StaticResource CategoryItemTemplate}"
                                                                 ItemsSource="{Binding FullChainOfCategories}">
                                                            <ListBox.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <StackPanel Orientation="Horizontal" />
                                                                </ItemsPanelTemplate>
                                                            </ListBox.ItemsPanel>
                                                        </ListBox>
                                                    </ToolTip>
                                                </TextBlock.ToolTip>
                                            </TextBlock>
                                            <iconPacks:PackIconMaterial Foreground="{StaticResource IncomeBrush}"
                                                                        Kind="{StaticResource IncomeIcon}"
                                                                        Opacity="0.5"
                                                                        Style="{StaticResource CellIconMaterial}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ContentControl.Resources>
                            </ContentControl>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:ParentTransactionViewModel}">
                            <Button Margin="0"
                                    Padding="0"
                                    HorizontalContentAlignment="Left"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Command="{Binding OpenParentTransactionView}"
                                    CommandParameter="{Binding Account.Value}">
                                <iconPacks:PackIconMaterial Margin="5,0,0,0"
                                                            Foreground="{DynamicResource GrayBrush4}"
                                                            Kind="{StaticResource ParentIcon}"
                                                            Style="{StaticResource CellIconMaterial}" />
                            </Button>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{StaticResource CellTextBlock}"
                                           Text="{Binding ToAccount.Value.Name.Value}" />
                                <iconPacks:PackIconMaterial Foreground="{DynamicResource GrayBrush4}"
                                                            IsTabStop="True"
                                                            Kind="{StaticResource IncomeIcon}"
                                                            Style="{StaticResource CellIconMaterial}" />
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <DataTemplate x:Key="CategoryEditingColumnTemplate">
                <ContentControl Content="{Binding}"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransLikeViewModel}">
                            <DockPanel LastChildFill="True">
                                <Button Click="CategoryOpenPopup_OnClick"
                                        DockPanel.Dock="Right"
                                        TabIndex="1"
                                        ToolTip="{lex:Loc CreateNewCategory}">
                                    <iconPacks:PackIconMaterial Foreground="{DynamicResource BlackColorBrush}"
                                                                Kind="{StaticResource AddIcon}"
                                                                Style="{StaticResource CellIconMaterial}" />
                                </Button>
                                <Popup x:Name="Popup"
                                       Closed="Popup_OnClosed"
                                       Opened="Popup_OnOpened"
                                       Placement="Right"
                                       PlacementTarget="{Binding ElementName=EditCategoryComboBox}"
                                       PopupAnimation="Slide"
                                       PreviewKeyDown="Popup_OnPreviewKeyDown"
                                       StaysOpen="False">
                                    <Border MinWidth="50"
                                            Padding="0"
                                            BorderBrush="{StaticResource AccentColorBrush}"
                                            BorderThickness="1">
                                        <StackPanel>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <TextBlock Grid.Row="0"
                                                           Grid.Column="0"
                                                           Margin="5,0,5,0"
                                                           VerticalAlignment="Center"
                                                           Text="{lex:LocText NameOfNewCategory,
                                                                              Suffix=:}" />
                                                <TextBox x:Name="FocusMe"
                                                         Grid.Row="0"
                                                         Grid.Column="1"
                                                         Focusable="True"
                                                         Text="{Binding NewCategoryViewModel.Name.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                                <TextBlock Grid.Row="1"
                                                           Grid.Column="0"
                                                           Margin="5,0,5,0"
                                                           VerticalAlignment="Center"
                                                           Text="{lex:Loc NewCategory_IsIncomeRelevant}" />
                                                <CheckBox x:Name="IsIncomeRelevant"
                                                          Grid.Row="1"
                                                          Grid.Column="1"
                                                          Focusable="True"
                                                          IsChecked="{Binding NewCategoryViewModel.IsIncomeRelevant.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                                <TextBlock Grid.Row="2"
                                                           Grid.Column="0"
                                                           Margin="5,0,5,0"
                                                           VerticalAlignment="Center"
                                                           Text="{lex:LocText NewCategory_MonthOffset,
                                                                              Suffix=:}">
                                                    <TextBlock.Style>
                                                        <Style BasedOn="{StaticResource {x:Type TextBlock}}"
                                                               TargetType="{x:Type TextBlock}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding NewCategoryViewModel.IsIncomeRelevant.Value, UpdateSourceTrigger=PropertyChanged}"
                                                                             Value="False">
                                                                    <Setter Property="Visibility"
                                                                            Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <controls:NumericUpDown Grid.Row="2"
                                                                        Grid.Column="1"
                                                                        Value="{Binding NewCategoryViewModel.MonthOffset.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                    <controls:NumericUpDown.Style>
                                                        <Style BasedOn="{StaticResource {x:Type controls:NumericUpDown}}"
                                                               TargetType="{x:Type controls:NumericUpDown}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding NewCategoryViewModel.IsIncomeRelevant.Value, UpdateSourceTrigger=PropertyChanged}"
                                                                             Value="False">
                                                                    <Setter Property="Visibility"
                                                                            Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </controls:NumericUpDown.Style>
                                                </controls:NumericUpDown>

                                                <TextBlock Grid.Row="2"
                                                           Grid.Column="0"
                                                           Margin="5,0,5,0"
                                                           VerticalAlignment="Center"
                                                           Text="{lex:LocText SuperiorCategory,
                                                                              Suffix=:}">
                                                    <TextBlock.Style>
                                                        <Style BasedOn="{StaticResource {x:Type TextBlock}}"
                                                               TargetType="{x:Type TextBlock}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding NewCategoryViewModel.IsIncomeRelevant.Value, UpdateSourceTrigger=PropertyChanged}"
                                                                             Value="True">
                                                                    <Setter Property="Visibility"
                                                                            Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <ComboBox x:Name="ParentCategoryComboBox"
                                                          Grid.Row="2"
                                                          Grid.Column="1"
                                                          IsEditable="True"
                                                          IsTextSearchCaseSensitive="True"
                                                          IsTextSearchEnabled="True"
                                                          ItemTemplate="{StaticResource IndentedCategoryItemTemplate}"
                                                          ItemsSource="{Binding NewCategoryViewModel.AllPotentialParents}"
                                                          SelectedItem="{Binding NewCategoryViewModel.Parent.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                          ShouldPreserveUserEnteredPrefix="True"
                                                          TextSearch.TextPath="Name.Value">
                                                    <ComboBox.Style>
                                                        <Style BasedOn="{StaticResource {x:Type ComboBox}}"
                                                               TargetType="{x:Type ComboBox}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding NewCategoryViewModel.IsIncomeRelevant.Value, UpdateSourceTrigger=PropertyChanged}"
                                                                             Value="True">
                                                                    <Setter Property="Visibility"
                                                                            Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ComboBox.Style>
                                                    <ComboBox.ToolTip>
                                                        <ToolTip>
                                                            <ListBox ItemTemplate="{StaticResource CategoryItemTemplate}"
                                                                     ItemsSource="{Binding NewCategoryViewModel.Parent.Value.FullChainOfCategories}">
                                                                <ListBox.ItemsPanel>
                                                                    <ItemsPanelTemplate>
                                                                        <StackPanel Orientation="Horizontal" />
                                                                    </ItemsPanelTemplate>
                                                                </ListBox.ItemsPanel>
                                                            </ListBox>
                                                        </ToolTip>
                                                    </ComboBox.ToolTip>
                                                </ComboBox>
                                                <Button Grid.Row="3"
                                                        Grid.Column="1"
                                                        HorizontalAlignment="Right"
                                                        Click="CategoryClosePopup_OnClick"
                                                        Command="{Binding NewCategoryViewModel.AddCommand}"
                                                        ToolTip="{lex:Loc CreateNewCategory}">
                                                    <iconPacks:PackIconMaterial Foreground="{DynamicResource BlackColorBrush}"
                                                                                Kind="{StaticResource AddIcon}"
                                                                                Style="{StaticResource CellIconMaterial}" />
                                                </Button>
                                            </Grid>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                                <ComboBox x:Name="EditCategoryComboBox"
                                          IsEditable="True"
                                          IsTextSearchCaseSensitive="True"
                                          IsTextSearchEnabled="True"
                                          ItemTemplate="{StaticResource IndentedCategoryItemTemplate}"
                                          ItemsSource="{Binding NewCategoryViewModel.All}"
                                          ShouldPreserveUserEnteredPrefix="True"
                                          TabIndex="0"
                                          TextSearch.TextPath="Name.Value">
                                    <ComboBox.SelectedItem>
                                        <Binding Mode="TwoWay"
                                                 Path="Category.Value"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <x:Static Member="mvvm:Rules.EmptyCategory" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </ComboBox.SelectedItem>
                                    <ComboBox.ToolTip>
                                        <ToolTip>
                                            <ListBox ItemTemplate="{StaticResource CategoryItemTemplate}"
                                                     ItemsSource="{Binding Category.Value.FullChainOfCategories}">
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                            </ListBox>
                                        </ToolTip>
                                    </ComboBox.ToolTip>
                                </ComboBox>
                            </DockPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:ParentTransactionViewModel}">
                            <!--  todo  -->
                            <iconPacks:PackIconMaterial Margin="5,0,0,0"
                                                        Foreground="{DynamicResource GrayBrush4}"
                                                        Kind="{StaticResource ParentIcon}"
                                                        Style="{StaticResource CellIconMaterial}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <ComboBox DisplayMemberPath="Name.Value"
                                      IsEditable="True"
                                      IsTextSearchCaseSensitive="False"
                                      IsTextSearchEnabled="True"
                                      ItemsSource="{Binding AllAccounts}"
                                      TextSearch.TextPath="Name.Value">
                                <ComboBox.SelectedItem>
                                    <Binding Mode="TwoWay"
                                             Path="ToAccount.Value"
                                             UpdateSourceTrigger="LostFocus" />
                                </ComboBox.SelectedItem>
                            </ComboBox>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!--  Memo  -->
            <DataTemplate x:Key="MemoColumnTemplate">
                <ContentControl Content="{Binding}"
                                IsTabStop="True"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransLikeViewModel}">
                            <TextBlock Style="{StaticResource CellTextBlock}"
                                       Text="{Binding Memo.Value, Mode=OneWay}"
                                       TextTrimming="CharacterEllipsis"
                                       ToolTip="{Binding Memo.Value}" />
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <DataTemplate x:Key="MemoEditingColumnTemplate">
                <ContentControl Content="{Binding}"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransLikeViewModel}">
                            <TextBox VerticalAlignment="Stretch"
                                     VerticalContentAlignment="Center"
                                     Focusable="True"
                                     Text="{Binding Memo.Value, UpdateSourceTrigger=LostFocus}"
                                     TextWrapping="NoWrap" />
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!--  Sum  -->
            <DataTemplate x:Key="SumColumnTemplate">
                <ContentControl Content="{Binding}"
                                IsTabStop="True"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <TextBlock Padding="0,0,5,0"
                                       Style="{StaticResource CellTextBlock}"
                                       TextAlignment="Right">
                                <TextBlock.Text>
                                    <MultiBinding Converter="{x:Static mvvm:Converters.TransferSumAsCorrectlySignedString}">
                                        <Binding ElementName="LayoutRoot"
                                                 Path="DataContext.AccountViewModel" />
                                        <Binding Path="FromAccount.Value" />
                                        <Binding Path="Sum.Value" />
                                    </MultiBinding>
                                </TextBlock.Text>
                                <TextBlock.Foreground>
                                    <MultiBinding Converter="{x:Static mvvm:Converters.TransferSumToSolidColorBrush}">
                                        <Binding ElementName="LayoutRoot"
                                                 Path="DataContext.AccountViewModel" />
                                        <!--  todo: Make TransferViewModel aware of in which AccountViewModel it is inside  -->
                                        <Binding Path="FromAccount.Value" />
                                        <Binding Path="ToAccount.Value" />
                                    </MultiBinding>
                                </TextBlock.Foreground>
                            </TextBlock>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type structure:TransLikeViewModel}">
                            <TextBlock Padding="0,0,5,0"
                                       Foreground="{Binding Sum.Value, Converter={x:Static mvvm:Converters.SumToSolidColorBrush}}"
                                       Style="{StaticResource CellTextBlock}"
                                       Text="{Binding Sum.Value, Converter={x:Static mvvm:Converters.SumToString}}"
                                       TextAlignment="Right" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <DataTemplate x:Key="SumEditingColumnTemplate">
                <ContentControl Content="{Binding}"
                                Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <TextBox VerticalContentAlignment="Center"
                                     TextAlignment="Right">
                                <TextBox.Foreground>
                                    <MultiBinding Converter="{x:Static mvvm:Converters.TransferSumToSolidColorBrush}">
                                        <Binding ElementName="LayoutRoot"
                                                 Path="DataContext.AccountViewModel" />
                                        <Binding Path="FromAccount.Value" />
                                        <Binding Path="ToAccount.Value" />
                                    </MultiBinding>
                                </TextBox.Foreground>
                                <TextBox.Text>
                                    <Binding Converter="{x:Static mvvm:Converters.SumToString}"
                                             Mode="TwoWay"
                                             Path="Sum.Value"
                                             UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <x:Static Member="mvvm:Rules.Currency" />
                                            <x:Static Member="mvvm:Rules.CurrencyLongRange" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type structure:TransLikeViewModel}">
                            <ContentControl Content="{Binding SumEdit}" ContentTemplate="{StaticResource SumEditTemplate}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!--  Cleared  -->
            <DataTemplate x:Key="ClearedColumnTemplate">
                <CheckBox MinHeight="30"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          IsChecked="{Binding Cleared.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Style="{StaticResource BffCheckBox}" />
            </DataTemplate>

            <!--  SubElementsFormTemplate  -->

            <DataTemplate x:Key="EmptyDataTemplate" />
            <DataTemplate x:Key="SubElementsEditingTemplatePart">
                <DataGrid HeadersVisibility="None"
                          ItemsSource="{Binding NewSubElements}">
                    <DataGrid.Columns>
                        <!--  Category  -->
                        <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference CategoryColumn}, Mode=TwoWay}"
                                                SortMemberPath="Category.Value.Name.Value">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding}"
                                                    ContentTemplate="{StaticResource CategoryEditingColumnTemplate}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--  Memo  -->
                        <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference MemoColumn}, Mode=TwoWay}"
                                                SortMemberPath="Memo.Value">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding}"
                                                    ContentTemplate="{StaticResource MemoEditingColumnTemplate}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--  Sum  -->
                        <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference SumColumn}, Mode=TwoWay}"
                                                IsReadOnly="False"
                                                SortMemberPath="Sum.Value">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding}"
                                                    ContentTemplate="{StaticResource SumEditingColumnTemplate}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--  Cleared  -->
                        <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference ClearedColumn}, Mode=TwoWay}"
                                                CellTemplate="{StaticResource EmptyDataTemplate}"
                                                IsReadOnly="True"
                                                SortMemberPath="Cleared.Value" />
                    </DataGrid.Columns>
                </DataGrid>
            </DataTemplate>
            <DataTemplate x:Key="SubElementsShowFormTemplate">
                <StackPanel>
                    <DataGrid BorderThickness="0,0,0,2"
                              HeadersVisibility="None"
                              ItemsSource="{Binding SubElements}"
                              RowStyle="{StaticResource DefaultRowStyle}">
                        <DataGrid.Columns>
                            <!--  Category  -->
                            <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference CategoryColumn}, Mode=TwoWay}"
                                                    SortMemberPath="Category.Value.Name.Value">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}"
                                                        ContentTemplate="{StaticResource CategoryColumnTemplate}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}"
                                                        ContentTemplate="{StaticResource CategoryEditingColumnTemplate}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <!--  Memo  -->
                            <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference MemoColumn}, Mode=TwoWay}"
                                                    SortMemberPath="Memo.Value">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}"
                                                        ContentTemplate="{StaticResource MemoColumnTemplate}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}"
                                                        ContentTemplate="{StaticResource MemoEditingColumnTemplate}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <!--  Sum  -->
                            <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference SumColumn}, Mode=TwoWay}"
                                                    IsReadOnly="False"
                                                    SortMemberPath="Sum.Value">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}"
                                                        ContentTemplate="{StaticResource SumColumnTemplate}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}"
                                                        ContentTemplate="{StaticResource SumEditingColumnTemplate}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <!--  Cleared  -->
                            <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference ClearedColumn}, Mode=TwoWay}"
                                                    CellTemplate="{StaticResource EmptyDataTemplate}"
                                                    IsReadOnly="True"
                                                    SortMemberPath="Cleared.Value" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <ContentControl Content="{Binding}"
                                    ContentTemplate="{StaticResource SubElementsEditingTemplatePart}" />
                    <DockPanel Background="{DynamicResource WhiteBrush}">
                        <Button Command="{Binding NewSubElementCommand}"
                                ToolTip="New Subelement">
                            <iconPacks:PackIconMaterial Width="{StaticResource IconSize}"
                                                        Height="{StaticResource IconSize}"
                                                        Foreground="{DynamicResource BlackColorBrush}"
                                                        Kind="{StaticResource AddIcon}" />
                        </Button>
                        <Button HorizontalAlignment="Right"
                                Command="{Binding ApplyCommand}"
                                ToolTip="Add to the table">
                            <iconPacks:PackIconMaterial Width="{StaticResource IconSize}"
                                                        Height="{StaticResource IconSize}"
                                                        Foreground="{DynamicResource BlackColorBrush}"
                                                        Kind="{StaticResource AddToTableIcon}" />
                        </Button>
                    </DockPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="SubElementsEditingFormTemplate">
                <StackPanel>
                    <ContentControl Content="{Binding}"
                                    ContentTemplate="{StaticResource SubElementsEditingTemplatePart}" />
                    <Button HorizontalAlignment="Left"
                            Command="{Binding NewSubElementCommand}"
                            ToolTip="New Subelement">
                        <iconPacks:PackIconMaterial Width="{StaticResource IconSize}"
                                                    Height="{StaticResource IconSize}"
                                                    Foreground="{DynamicResource BlackColorBrush}"
                                                    Kind="{StaticResource AddIcon}" />
                    </Button>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--  TransGrid  -->

        <!--  The DataGrid, which shows all saved Trans objects  -->
        <DataGrid x:Name="TransGrid"
                  Grid.Row="0"
                  ItemsSource="{Binding TransList, ElementName=Root}"
                  Loaded="TransGrid_OnInitialized"
                  RowDetailsVisibilityMode="{Binding ShowRowDetailsMode}"
                  RowStyle="{StaticResource DefaultRowStyle}"
                  ScrollViewer.IsDeferredScrollingEnabled="True"
                  SelectionMode="Single"
                  SelectionUnit="FullRow">
            <DataGrid.Resources />
            <DataGrid.Columns>
                <!--  Symbol  -->
                <DataGridTemplateColumn x:Name="SymbolColumn"
                                        Header="{lex:Loc AccountView_Header_SymbolAbbr}">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}"
                                       ToolTip="{lex:Loc AccountView_Header_SymbolAbbr_Tooltip}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource SymbolColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--  Account  -->
                <DataGridTemplateColumn x:Name="AccountColumn"
                                        Header="{lex:Loc AccountView_Header_Account}"
                                        SortMemberPath="Account.Name.Value">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource AccountColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource AccountEditingColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!--  Date  -->
                <DataGridTemplateColumn x:Name="DateColumn"
                                        Header="{lex:Loc AccountView_Header_Date}"
                                        SortMemberPath="Date.Value">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource DateColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource DateEditingColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!--  Flag  -->
                <DataGridTemplateColumn x:Name="FlagColumn"
                                        Header="{lex:Loc AccountView_Header_Flag}"
                                        SortMemberPath="Flag.Value">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource FlagColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource FlagEditingColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!--  CheckNumber  -->
                <DataGridTemplateColumn x:Name="CheckNumberColumn"
                                        Header="{lex:Loc AccountView_Header_CheckNumber}"
                                        SortMemberPath="CheckNumber.Value">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource CheckNumberColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource CheckNumberEditingColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!--  Payee  -->
                <DataGridTemplateColumn x:Name="PayeeColumn"
                                        Header="{lex:Loc AccountView_Header_Payee}"
                                        SortMemberPath="Payee.Name.Value">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource PayeeColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource PayeeEditingColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!--  Category  -->
                <DataGridTemplateColumn x:Name="CategoryColumn"
                                        Header="{lex:Loc AccountView_Header_Category}"
                                        SortMemberPath="Category.Name.Value">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource CategoryColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource CategoryEditingColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!--  Memo  -->
                <DataGridTemplateColumn x:Name="MemoColumn"
                                        Width="*"
                                        Header="{lex:Loc AccountView_Header_Memo}"
                                        SortMemberPath="Memo.Value">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource MemoColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource MemoEditingColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!--  Sum  -->
                <DataGridTemplateColumn x:Name="SumColumn"
                                        Header="{lex:Loc AccountView_Header_Sum}"
                                        IsReadOnly="False"
                                        SortMemberPath="Sum.Value">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource SumColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource SumEditingColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!--  Cleared  -->
                <DataGridTemplateColumn x:Name="ClearedColumn"
                                        Header="{lex:Loc AccountView_Header_Cleared}"
                                        IsReadOnly="True"
                                        SortMemberPath="Cleared.Value">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}"
                                            ContentTemplate="{StaticResource ClearedColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <ContentControl HorizontalAlignment="Left"
                                    Content="{Binding}">
                        <ContentControl.Margin>
                            <MultiBinding Converter="{x:Static mvvm:Converters.WidthsToLeftMargin}">
                                <Binding Path="Width"
                                         Source="{x:Reference SymbolColumn}" />
                                <Binding Path="Width"
                                         Source="{x:Reference AccountColumn}" />
                                <Binding Path="Width"
                                         Source="{x:Reference DateColumn}" />
                                <Binding Path="Width"
                                         Source="{x:Reference FlagColumn}" />
                                <Binding Path="Width"
                                         Source="{x:Reference CheckNumberColumn}" />
                                <Binding Path="Width"
                                         Source="{x:Reference PayeeColumn}" />
                            </MultiBinding>
                        </ContentControl.Margin>
                        <ContentControl.Width>
                            <MultiBinding Converter="{x:Static mvvm:Converters.WidthsToDouble}">
                                <Binding Path="Width"
                                         Source="{x:Reference CategoryColumn}" />
                                <Binding Path="Width"
                                         Source="{x:Reference MemoColumn}" />
                                <Binding Path="Width"
                                         Source="{x:Reference SumColumn}" />
                                <Binding Path="Width"
                                         Source="{x:Reference ClearedColumn}" />
                            </MultiBinding>
                        </ContentControl.Width>
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type forModels:ParentTransactionViewModel}">
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource SubElementsShowFormTemplate}" />
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type structure:TransLikeViewModel}">
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource EmptyDataTemplate}" />
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>

        <!--  EditingForm  -->

        <!--  The Editing-Form  -->
        <StackPanel Grid.Row="1">
            <DataGrid Width="{Binding ActualWidth, ElementName=TransGrid}"
                      MaxHeight="200"
                      BorderThickness="0,2,0,0"
                      HeadersVisibility="None"
                      ItemsSource="{Binding NewTransList}"
                      RowDetailsVisibilityMode="Visible">
                <DataGrid.Columns>
                    <!--  Symbol  -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference SymbolColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource SymbolColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--  Account  -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference AccountColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource AccountEditingColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--  Date  -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference DateColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource DateEditingColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--  Flag  -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference FlagColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource FlagEditingColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--  CheckNumber  -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference CheckNumberColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource CheckNumberEditingColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--  Payee  -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference PayeeColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource PayeeEditingColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--  Category  -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference CategoryColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource CategoryEditingColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--  Memo  -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference MemoColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource MemoEditingColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--  Sum  -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference SumColumn}, Mode=TwoWay}"
                                            IsReadOnly="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource SumEditingColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--  Cleared  -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference ClearedColumn}, Mode=TwoWay}"
                                            IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource ClearedColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <ContentControl HorizontalAlignment="Left"
                                        Content="{Binding}">
                            <ContentControl.Margin>
                                <MultiBinding Converter="{x:Static mvvm:Converters.WidthsToLeftMargin}">
                                    <Binding Path="Width"
                                             Source="{x:Reference SymbolColumn}" />
                                    <Binding Path="Width"
                                             Source="{x:Reference AccountColumn}" />
                                    <Binding Path="Width"
                                             Source="{x:Reference DateColumn}" />
                                    <Binding Path="Width"
                                             Source="{x:Reference FlagColumn}" />
                                    <Binding Path="Width"
                                             Source="{x:Reference CheckNumberColumn}" />
                                    <Binding Path="Width"
                                             Source="{x:Reference PayeeColumn}" />
                                </MultiBinding>
                            </ContentControl.Margin>
                            <ContentControl.Width>
                                <MultiBinding Converter="{x:Static mvvm:Converters.WidthsToDouble}">
                                    <Binding ElementName="CategoryColumn"
                                             Path="Width" />
                                    <Binding Path="Width"
                                             Source="{x:Reference MemoColumn}" />
                                    <Binding Path="Width"
                                             Source="{x:Reference SumColumn}" />
                                    <Binding Path="Width"
                                             Source="{x:Reference ClearedColumn}" />
                                </MultiBinding>
                            </ContentControl.Width>
                            <ContentControl.Resources>
                                <DataTemplate DataType="{x:Type forModels:ParentTransactionViewModel}">
                                    <ContentControl Content="{Binding}"
                                                    ContentTemplate="{StaticResource SubElementsEditingFormTemplate}" />
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type structure:TransLikeViewModel}">
                                    <ContentControl Content="{Binding}"
                                                    ContentTemplate="{StaticResource EmptyDataTemplate}" />
                                </DataTemplate>
                            </ContentControl.Resources>
                        </ContentControl>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>
            </DataGrid>
            <DockPanel Margin="0,5,0,0">
                <Button Command="{Binding NewTransactionCommand}"
                        ToolTip="{lex:Loc AccountView_ToolTip_NewTransaction}"
                        Visibility="{Binding NewTransactionVisibility}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial Width="{StaticResource IconSize}"
                                                    Height="{StaticResource IconSize}"
                                                    Foreground="{DynamicResource BlackColorBrush}"
                                                    Kind="{StaticResource AddIcon}" />
                        <iconPacks:PackIconMaterial Width="{StaticResource IconSize}"
                                                    Height="{StaticResource IconSize}"
                                                    Margin="5,0,0,0"
                                                    Foreground="{DynamicResource TransactionBrush}"
                                                    Kind="{StaticResource TransactionIcon}" />
                    </StackPanel>
                </Button>
                <Button Margin="5,0,0,0"
                        Command="{Binding NewTransferCommand}"
                        ToolTip="{lex:Loc AccountView_ToolTip_NewTransfer}"
                        Visibility="{Binding NewTransferVisibility}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial Width="{StaticResource IconSize}"
                                                    Height="{StaticResource IconSize}"
                                                    Foreground="{DynamicResource BlackColorBrush}"
                                                    Kind="{StaticResource AddIcon}" />
                        <iconPacks:PackIconMaterial Width="{StaticResource IconSize}"
                                                    Height="{StaticResource IconSize}"
                                                    Margin="5,0,0,0"
                                                    Foreground="{DynamicResource TransferBrush}"
                                                    Kind="{StaticResource TransferIcon}" />
                    </StackPanel>
                </Button>
                <Button Margin="5,0,0,0"
                        Command="{Binding NewParentTransactionCommand}"
                        ToolTip="{lex:Loc AccountView_ToolTip_NewParentTransaction}"
                        Visibility="{Binding NewParentTransactionVisibility}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial Width="{StaticResource IconSize}"
                                                    Height="{StaticResource IconSize}"
                                                    Foreground="{DynamicResource BlackColorBrush}"
                                                    Kind="{StaticResource AddIcon}" />
                        <iconPacks:PackIconMaterial Width="{StaticResource IconSize}"
                                                    Height="{StaticResource IconSize}"
                                                    Margin="5,0,0,0"
                                                    Foreground="{DynamicResource BlackColorBrush}"
                                                    Kind="{StaticResource ParentIcon}" />
                        <iconPacks:PackIconMaterial Width="{StaticResource IconSize}"
                                                    Height="{StaticResource IconSize}"
                                                    Margin="5,0,0,0"
                                                    Foreground="{DynamicResource TransactionBrush}"
                                                    Kind="{StaticResource TransactionIcon}" />
                    </StackPanel>
                </Button>
                <Button Margin="5,0,0,0"
                        HorizontalAlignment="Right"
                        Command="{Binding ApplyCommand}"
                        ToolTip="{lex:Loc AccountView_ToolTip_AddToTable}"
                        Visibility="{Binding ApplyVisibility}">
                    <iconPacks:PackIconMaterial Width="{StaticResource IconSize}"
                                                Height="{StaticResource IconSize}"
                                                Foreground="{DynamicResource BlackColorBrush}"
                                                Kind="{StaticResource AddToTableIcon}" />
                </Button>
            </DockPanel>
        </StackPanel>
    </Grid>
</UserControl>