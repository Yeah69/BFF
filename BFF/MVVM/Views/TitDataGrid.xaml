<UserControl x:Class="BFF.MVVM.Views.TitDataGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             xmlns:validationRules="clr-namespace:BFF.MVVM.ValidationRules"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:forModels="clr-namespace:BFF.MVVM.ViewModels.ForModels"
             xmlns:structure="clr-namespace:BFF.MVVM.ViewModels.ForModels.Structure"
             xmlns:mvvm="clr-namespace:BFF.MVVM"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             x:Name="Root">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/controls.datagrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/controls.checkbox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/controls.combobox.xaml" />
                <ResourceDictionary Source="/Resources/Icons.xaml" />
                <ResourceDictionary Source="/MVVM/Resources/BFF_ModifiedMAMCheckBox.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <iconPacks:PackIconMaterialKind x:Key="TransactionIcon">Logout</iconPacks:PackIconMaterialKind>
            <iconPacks:PackIconMaterialKind x:Key="IncomeIcon">Login</iconPacks:PackIconMaterialKind>
            <iconPacks:PackIconMaterialKind x:Key="TransferIcon">ShuffleVariant</iconPacks:PackIconMaterialKind>
            <iconPacks:PackIconMaterialKind x:Key="PlaceholderIcon">ClockFast</iconPacks:PackIconMaterialKind>
            <iconPacks:PackIconMaterialKind x:Key="ParentIcon">Sitemap</iconPacks:PackIconMaterialKind>
            <iconPacks:PackIconMaterialKind x:Key="AddToTableIcon">TableRowPlusAfter</iconPacks:PackIconMaterialKind>
            <iconPacks:PackIconMaterialKind x:Key="RemoveFromTableIcon">TableRowRemove</iconPacks:PackIconMaterialKind>

            <Style x:Key="CellContent" TargetType="ContentControl">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="MinHeight" Value="30" />
            </Style>

            <Style x:Key="CellTextBlock" TargetType="TextBlock">
                <Setter Property="Padding" Value="5,0,0,0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style x:Key="CellIconMaterial" TargetType="iconPacks:PackIconMaterial">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Height" Value="{StaticResource IconSize}" />
                <Setter Property="Width" Value="{StaticResource IconSize}" />
            </Style>

            <ContextMenu x:Key="RowMenu">
                <MenuItem Header="{lex:Loc AccountView_ConMenu_Delete}" Command="{Binding DeleteCommand}">
                    <MenuItem.Icon>
                        <iconPacks:PackIconMaterial Kind="{StaticResource RemoveFromTableIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{StaticResource BlackBrush}" />
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>

            <Style x:Key="DefaultRowStyle" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
                <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
            </Style>

            <Style BasedOn="{StaticResource MetroDataGrid}" TargetType="{x:Type DataGrid}">
                <Setter Property="AlternatingRowBackground" Value="{DynamicResource GrayBrush8}" />
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="CanUserSortColumns" Value="False"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="EnableRowVirtualization" Value="True"/>
                <Setter Property="EnableColumnVirtualization" Value="True"/>
                <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
                <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            </Style>

            <!-- ColumnTemplates -->
            
            <!-- Symbol -->
            <DataTemplate x:Key="SymbolColumnTemplate">
                <ContentControl Content="{Binding}" Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type forModels:TransactionViewModel}">
                            <iconPacks:PackIconMaterial Kind="{StaticResource TransactionIcon}" Foreground="{DynamicResource TransactionBrush}" Style="{StaticResource CellIconMaterial}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:ParentTransactionViewModel}">
                            <iconPacks:PackIconMaterial Kind="{StaticResource TransactionIcon}" Foreground="{DynamicResource TransactionBrush}" Style="{StaticResource CellIconMaterial}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:IncomeViewModel}">
                            <iconPacks:PackIconMaterial Kind="{StaticResource IncomeIcon}" Foreground="{DynamicResource IncomeBrush}" Style="{StaticResource CellIconMaterial}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:ParentIncomeViewModel}">
                            <iconPacks:PackIconMaterial Kind="{StaticResource IncomeIcon}" Foreground="{DynamicResource IncomeBrush}" Style="{StaticResource CellIconMaterial}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <iconPacks:PackIconMaterial Kind="{StaticResource TransferIcon}" Foreground="{DynamicResource TransferBrush}" Style="{StaticResource CellIconMaterial}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TitLikeViewModelPlaceholder}">
                            <iconPacks:PackIconMaterial Kind="{StaticResource PlaceholderIcon}" Foreground="{DynamicResource BlackBrush}" Style="{StaticResource CellIconMaterial}" />
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!-- Account -->
            <DataTemplate x:Key="AccountColumnTemplate">
                <ContentControl Content="{Binding}" Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransIncBaseViewModel}">
                            <TextBlock Text="{Binding Account.Value.Name.Value}" Style="{StaticResource CellTextBlock}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <TextBlock Text="{lex:Loc AccountView_Column_Transfer}" Style="{StaticResource CellTextBlock}" Foreground="{DynamicResource GrayBrush4}"/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TitLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <DataTemplate  x:Key="AccountEditingColumnTemplate">
                <ContentControl Content="{Binding}" Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransIncBaseViewModel}">
                            <ComboBox TextSearch.TextPath="Name.Value"
                                      IsEditable="True"
                                      IsTextSearchCaseSensitive="False"
                                      IsTextSearchEnabled="True"
                                      ItemsSource="{Binding AllAccounts}"
                                      DisplayMemberPath="Name.Value">
                                <ComboBox.SelectedItem>
                                    <Binding Path="Account.Value" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <validationRules:NoNullRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </ComboBox.SelectedItem>
                            </ComboBox>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <TextBlock Text="{lex:Loc AccountView_Column_Transfer}" Style="{StaticResource CellTextBlock}" Foreground="{DynamicResource GrayBrush4}"/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TitLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!-- Date -->
            <DataTemplate x:Key="DateColumnTemplate">
                <ContentControl Content="{Binding}" Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TitBaseViewModel}">
                            <TextBlock Text="{Binding Date.Value, Converter={x:Static mvvm:Converters.DateTimeToString}}" Style="{StaticResource CellTextBlock}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TitLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <DataTemplate x:Key="DateEditingColumnTemplate">
                <ContentControl Content="{Binding}" Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TitBaseViewModel}">
                            <DatePicker SelectedDate="{Binding Date.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"
                                        SelectedDateFormat="{Binding DataContext.IsDateLong, ElementName=LayoutRoot, Converter={x:Static mvvm:Converters.BooleanToDatePickerFormat}}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TitLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!-- Payee -->
            <DataTemplate x:Key="PayeeColumnTemplate">
                <ContentControl HorizontalAlignment="Stretch" Content="{Binding}" Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransIncBaseViewModel}" >
                            <TextBlock Text="{Binding Payee.Value.Name.Value}" Style="{StaticResource CellTextBlock}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding FromAccount.Value.Name.Value}" Style="{StaticResource CellTextBlock}" />
                                <iconPacks:PackIconMaterial Kind="{StaticResource TransactionIcon}" Foreground="{DynamicResource GrayBrush4}" Style="{StaticResource CellIconMaterial}" />
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TitLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <DataTemplate x:Key="PayeeEditingColumnTemplate">
                <ContentControl HorizontalAlignment="Stretch" Content="{Binding}" Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TransIncBaseViewModel}" >
                            <DockPanel LastChildFill="True">
                                <Button DockPanel.Dock="Right" x:Name="AddPayeeButton" Command="{Binding AddPayeeCommand}" Padding="0">
                                    <iconPacks:PackIconMaterial Kind="{StaticResource AddIcon}" Foreground="{DynamicResource BlackColorBrush}" Style="{StaticResource CellIconMaterial}" />
                                </Button>
                                <Popup PlacementTarget="{Binding ElementName=AddPayeeButton}" Placement="Bottom" PopupAnimation="Slide"
                                       IsOpen="{Binding ElementName=AddPayeeButton, Path=IsVisible, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox Focusable="True" 
                                             Text="{Binding PayeeText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                             Height="{Binding ElementName=AddPayeeButton, Path=ActualHeight}"
                                             MinWidth="{Binding ElementName=AddPayeeButton, Path=ActualWidth}" />
                                </Popup>
                                <ComboBox TextSearch.TextPath="Name.Value" 
                                          Text="{Binding PayeeText, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                          IsEditable="True"
                                          IsTextSearchEnabled="True"
                                          IsTextSearchCaseSensitive="False"
                                          ItemsSource="{Binding AllPayees}"
                                          HorizontalAlignment="Stretch"
                                          DisplayMemberPath="Name.Value">
                                    <ComboBox.SelectedItem>
                                        <Binding Path="Payee.Value" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                            <Binding.ValidationRules>
                                                <validationRules:NoNullRule />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </ComboBox.SelectedItem>
                                </ComboBox>
                            </DockPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <ComboBox TextSearch.TextPath="Name.Value"
                                      IsEditable="True"
                                      IsTextSearchCaseSensitive="False"
                                      IsTextSearchEnabled="True"
                                      ItemsSource="{Binding AllAccounts}"
                                      DisplayMemberPath="Name.Value">
                                <ComboBox.SelectedItem>
                                    <Binding Path="FromAccount.Value" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    </Binding>
                                </ComboBox.SelectedItem>
                            </ComboBox>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TitLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!-- Category -->
            <DataTemplate x:Key="CategoryColumnTemplate">
                <ContentControl Content="{Binding}" Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TitLikeViewModel}">
                            <TextBlock Text="{Binding Category.Value.Name.Value}" ToolTip="{Binding Category.Value.FullName}" Style="{StaticResource CellTextBlock}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:ParentTransactionViewModel}">
                            <Button Command="{Binding OpenParentTitView}" CommandParameter="{Binding Account.Value}" BorderThickness="0" HorizontalContentAlignment="Left" Margin="0" Padding="0" Background="Transparent">
                                <iconPacks:PackIconMaterial Kind="{StaticResource ParentIcon}" Foreground="{DynamicResource GrayBrush4}" Style="{StaticResource CellIconMaterial}" Margin="5,0,0,0" />
                            </Button>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:ParentIncomeViewModel}">
                            <Button Command="{Binding OpenParentTitView}" CommandParameter="{Binding Account.Value}" BorderThickness="0" HorizontalContentAlignment="Left" Margin="0" Padding="0" Background="Transparent">
                                <iconPacks:PackIconMaterial Kind="{StaticResource ParentIcon}" Foreground="{DynamicResource GrayBrush4}" Style="{StaticResource CellIconMaterial}" Margin="5,0,0,0" />
                            </Button>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding ToAccount.Value.Name.Value}" Style="{StaticResource CellTextBlock}" />
                                <iconPacks:PackIconMaterial Kind="{StaticResource IncomeIcon}" Foreground="{DynamicResource GrayBrush4}" Style="{StaticResource CellIconMaterial}" />
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TitLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <DataTemplate x:Key="CategoryEditingColumnTemplate">
                <ContentControl Content="{Binding}" Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TitLikeViewModel}">
                            <DockPanel LastChildFill="True">
                                <DockPanel.Resources>
                                    <DataTemplate x:Key="CategoryItemTemplate">
                                        <StackPanel Orientation="Horizontal">
                                            <Rectangle Height="16"
                                                       Width="4" 
                                                       Fill="{DynamicResource AccentColorBrush}" 
                                                       Margin="{Binding Depth, Converter={x:Static mvvm:Converters.CategoryDepthToMargin}}"/>
                                            <TextBlock Text="{Binding Name.Value}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </DockPanel.Resources>
                                <controls:SplitButton DockPanel.Dock="Right" 
                                                      x:Name="AddCategoryButton" 
                                                      Orientation="Horizontal"
                                                      Command="{Binding NewCategoryViewModel.AddCategoryCommand}" 
                                                      SelectedItem="{Binding NewCategoryViewModel.AddingCategoryParent.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      ItemsSource="{Binding NewCategoryViewModel.AllCategories}"
                                                      ItemTemplate="{StaticResource CategoryItemTemplate}">
                                    <controls:SplitButton.IconTemplate>
                                        <DataTemplate>
                                            <iconPacks:PackIconMaterial Kind="{StaticResource AddIcon}"
                                                                        Foreground="{DynamicResource BlackColorBrush}"
                                                                        Style="{StaticResource CellIconMaterial}" />
                                        </DataTemplate>
                                    </controls:SplitButton.IconTemplate>
                                </controls:SplitButton>
                                <Popup PlacementTarget="{Binding ElementName=AddCategoryButton}" 
                                       Placement="Bottom" PopupAnimation="Slide"
                                       IsOpen="{Binding ElementName=AddCategoryButton, Path=IsVisible, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox Focusable="True" 
                                             Text="{Binding NewCategoryViewModel.CategoryText.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                             Height="{Binding ElementName=AddCategoryButton, Path=ActualHeight}"
                                             MinWidth="{Binding ElementName=AddCategoryButton, Path=ActualWidth}" />
                                </Popup>
                                <ComboBox TextSearch.TextPath="Name.Value"
                                          IsEditable="True" 
                                          IsTextSearchCaseSensitive="True"
                                          IsTextSearchEnabled="True"
                                          ItemsSource="{Binding NewCategoryViewModel.AllCategories}"
                                          ItemTemplate="{StaticResource CategoryItemTemplate}"
                                          ShouldPreserveUserEnteredPrefix="True">
                                    <ComboBox.SelectedItem>
                                        <Binding Path="Category.Value" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                            <!--<Binding.ValidationRules>
                                                <validationRules:NoNullRule />
                                            </Binding.ValidationRules>-->
                                        </Binding>
                                    </ComboBox.SelectedItem>
                                </ComboBox>
                            </DockPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:ParentTransactionViewModel}">
                            <!-- todo -->
                            <iconPacks:PackIconMaterial Kind="{StaticResource ParentIcon}" Foreground="{DynamicResource GrayBrush4}" Style="{StaticResource CellIconMaterial}" Margin="5,0,0,0" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:ParentIncomeViewModel}">
                            <!-- todo -->
                            <iconPacks:PackIconMaterial Kind="{StaticResource ParentIcon}" Foreground="{DynamicResource GrayBrush4}" Style="{StaticResource CellIconMaterial}" Margin="5,0,0,0" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <ComboBox TextSearch.TextPath="Name.Value"
                                      IsEditable="True"
                                      IsTextSearchCaseSensitive="False"
                                      IsTextSearchEnabled="True"
                                      ItemsSource="{Binding AllAccounts}"
                                      DisplayMemberPath="Name.Value">
                                <ComboBox.SelectedItem>
                                    <Binding Path="ToAccount.Value" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                    </Binding>
                                </ComboBox.SelectedItem>
                            </ComboBox>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TitLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!-- Memo -->
            <DataTemplate x:Key="MemoColumnTemplate">
                <ContentControl Content="{Binding}" Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TitLikeViewModel}">
                            <TextBlock Text="{Binding Memo.Value, Mode=OneWay}" ToolTip="{Binding Memo.Value}" TextTrimming="CharacterEllipsis" Style="{StaticResource CellTextBlock}" />
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <DataTemplate x:Key="MemoEditingColumnTemplate">
                <ContentControl Content="{Binding}" Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type structure:TitLikeViewModel}">
                            <TextBox Text="{Binding Memo.Value, UpdateSourceTrigger=LostFocus}" TextWrapping="NoWrap" VerticalAlignment="Stretch" VerticalContentAlignment="Center" />
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!-- Sum -->
            <DataTemplate x:Key="SumColumnTemplate">
                <ContentControl Content="{Binding}" Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <TextBlock Name="TitGrid_SumBox" TextAlignment="Right" Style="{StaticResource CellTextBlock}" Padding="0,0,5,0">
                                <TextBlock.Text>
                                    <MultiBinding Converter="{x:Static mvvm:Converters.TransferSumAsCorrectlySignedString}">
                                        <Binding Path="DataContext.AccountViewModel" ElementName="LayoutRoot" />
                                        <Binding Path="FromAccount.Value" />
                                        <Binding Path="Sum.Value" />
                                    </MultiBinding>
                                </TextBlock.Text>
                                <TextBlock.Foreground>
                                    <MultiBinding Converter="{x:Static mvvm:Converters.TransferSumToSolidColorBrush}">
                                        <Binding Path="DataContext.AccountViewModel" ElementName="LayoutRoot" /> <!-- todo: Make TransferViewModel aware of in which AccountViewModel it is inside -->
                                        <Binding Path="FromAccount.Value" />
                                        <Binding Path="ToAccount.Value" />
                                    </MultiBinding>
                                </TextBlock.Foreground>
                            </TextBlock>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type structure:TitLikeViewModel}">
                            <TextBlock Name="TitGrid_SumBox" TextAlignment="Right"  Style="{StaticResource CellTextBlock}"  Padding="0,0,5,0"
                                       Foreground="{Binding Sum.Value, Converter={x:Static mvvm:Converters.SumToSolidColorBrush}}"
                                       Text="{Binding Sum.Value, Converter={x:Static mvvm:Converters.SumToString}}" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TitLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <DataTemplate  x:Key="SumEditingColumnTemplate">
                <ContentControl Content="{Binding}" Style="{StaticResource CellContent}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                            <TextBox Name="TitGrid_SumBox" TextAlignment="Right" VerticalContentAlignment="Center">
                                <TextBox.Foreground>
                                    <MultiBinding Converter="{x:Static mvvm:Converters.TransferSumToSolidColorBrush}">
                                        <Binding Path="DataContext.AccountViewModel" ElementName="LayoutRoot" />
                                        <Binding Path="FromAccount.Value" />
                                        <Binding Path="ToAccount.Value" />
                                    </MultiBinding>
                                </TextBox.Foreground>
                                <TextBox.Text>
                                    <Binding Path="Sum.Value" Converter="{x:Static mvvm:Converters.SumToString}" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <validationRules:CurrencyRule />
                                            <validationRules:CurrencyLongRangeRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type structure:TitLikeViewModel}">
                            <TextBox Name="TitGrid_SumBox" TextAlignment="Right" VerticalContentAlignment="Center"
                                       Foreground="{Binding Sum.Value, Converter={x:Static mvvm:Converters.SumToSolidColorBrush}}">
                                <TextBox.Text>
                                    <Binding Path="Sum.Value" Converter="{x:Static mvvm:Converters.SumToString}" Mode="TwoWay" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <validationRules:CurrencyRule />
                                            <validationRules:CurrencyLongRangeRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type forModels:TitLikeViewModelPlaceholder}" />
                    </ContentControl.Resources>
                </ContentControl>
            </DataTemplate>
            <!-- Cleared -->
            <DataTemplate x:Key="ClearedColumnTemplate">
                <CheckBox Style="{StaticResource BffCheckBox}" IsChecked="{Binding Cleared.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" MinHeight="30" VerticalAlignment="Center"/>
            </DataTemplate>
            
            <!-- SubElementsFormTemplate -->
            
            <DataTemplate x:Key="EmptyDataTemplate"/>
            <DataTemplate x:Key="SubElementsEditingTemplatePart">
                <DataGrid ItemsSource="{Binding NewSubElements}" HeadersVisibility="None">
                    <DataGrid.Columns>
                        <!-- Category -->
                        <DataGridTemplateColumn SortMemberPath="Category.Value.Name.Value" Width="{Binding Width, Source={x:Reference CategoryColumn}, Mode=TwoWay}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding}" ContentTemplate="{StaticResource CategoryEditingColumnTemplate}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!-- Memo -->
                        <DataGridTemplateColumn SortMemberPath="Memo.Value" Width="{Binding Width, Source={x:Reference MemoColumn}, Mode=TwoWay}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding}" ContentTemplate="{StaticResource MemoEditingColumnTemplate}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!-- Sum -->
                        <DataGridTemplateColumn SortMemberPath="Sum.Value" IsReadOnly="False"  Width="{Binding Width, Source={x:Reference SumColumn}, Mode=TwoWay}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SumEditingColumnTemplate}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!-- Cleared -->
                        <DataGridTemplateColumn SortMemberPath="Cleared.Value" IsReadOnly="True"  Width="{Binding Width, Source={x:Reference ClearedColumn}, Mode=TwoWay}"
                                                    CellTemplate="{StaticResource EmptyDataTemplate}" />
                    </DataGrid.Columns>
                </DataGrid>
            </DataTemplate>
            <DataTemplate x:Key="SubElementsShowFormTemplate">
                <StackPanel>
                    <DataGrid ItemsSource="{Binding SubElements}" RowStyle="{StaticResource DefaultRowStyle}" HeadersVisibility="None" BorderThickness="0,0,0,2">
                        <DataGrid.Columns>
                            <!-- Category -->
                            <DataGridTemplateColumn SortMemberPath="Category.Value.Name.Value" Width="{Binding Width, Source={x:Reference CategoryColumn}, Mode=TwoWay}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}" ContentTemplate="{StaticResource CategoryColumnTemplate}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}" ContentTemplate="{StaticResource CategoryEditingColumnTemplate}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <!-- Memo -->
                            <DataGridTemplateColumn SortMemberPath="Memo.Value" Width="{Binding Width, Source={x:Reference MemoColumn}, Mode=TwoWay}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}" ContentTemplate="{StaticResource MemoColumnTemplate}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}" ContentTemplate="{StaticResource MemoEditingColumnTemplate}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <!-- Sum -->
                            <DataGridTemplateColumn SortMemberPath="Sum.Value" IsReadOnly="False" Width="{Binding Width, Source={x:Reference SumColumn}, Mode=TwoWay}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SumColumnTemplate}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SumEditingColumnTemplate}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <!-- Cleared -->
                            <DataGridTemplateColumn SortMemberPath="Cleared.Value" IsReadOnly="True" Width="{Binding Width, Source={x:Reference ClearedColumn}, Mode=TwoWay}"
                                                    CellTemplate="{StaticResource EmptyDataTemplate}" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SubElementsEditingTemplatePart}" />
                    <DockPanel Background="{DynamicResource WhiteBrush}">
                        <Button ToolTip="New Subelement" Command="{Binding NewSubElementCommand}">
                            <iconPacks:PackIconMaterial Kind="{StaticResource AddIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource BlackColorBrush}" />
                        </Button>
                        <Button ToolTip="Add to the table" Command="{Binding ApplyCommand}" HorizontalAlignment="Right">
                            <iconPacks:PackIconMaterial Kind="{StaticResource AddToTableIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource BlackColorBrush}" />
                        </Button>
                    </DockPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="SubElementsEditingFormTemplate">
                <StackPanel>
                    <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SubElementsEditingTemplatePart}" />
                    <Button ToolTip="New Subelement" Command="{Binding NewSubElementCommand}" HorizontalAlignment="Left">
                        <iconPacks:PackIconMaterial Kind="{StaticResource AddIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource BlackColorBrush}" />
                    </Button>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- TitsGrid -->
        
        <!-- The DataGrid, which shows all saved Tits -->
        <DataGrid Name="TitGrid" Grid.Row="0" ItemsSource="{Binding Tits, ElementName=Root}" RowStyle="{StaticResource DefaultRowStyle}" 
                  SelectionMode="Single" SelectionUnit="FullRow" RowDetailsVisibilityMode="{Binding ShowRowDetailsMode}"
                  ScrollViewer.IsDeferredScrollingEnabled="True">
            <DataGrid.Columns>
                <!-- Symbol -->
                <DataGridTemplateColumn Header="{lex:Loc AccountView_Header_SymbolAbbr}" x:Name="SymbolColumn">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SymbolColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Account -->
                <DataGridTemplateColumn Header="{lex:Loc AccountView_Header_Account}" SortMemberPath="Account.Name.Value" x:Name="AccountColumn">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource AccountColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource AccountEditingColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!-- Date -->
                <DataGridTemplateColumn Header="{lex:Loc AccountView_Header_Date}" SortMemberPath="Date" x:Name="DateColumn">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource DateColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource DateEditingColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!-- Payee -->
                <DataGridTemplateColumn Header="{lex:Loc AccountView_Header_Payee}" SortMemberPath="Payee.Name.Value" x:Name="PayeeColumn">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource PayeeColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource PayeeEditingColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!-- Category -->
                <DataGridTemplateColumn Header="{lex:Loc AccountView_Header_Category}" SortMemberPath="Category.Name.Value" x:Name="CategoryColumn">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource CategoryColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource CategoryEditingColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!-- Memo -->
                <DataGridTemplateColumn Header="{lex:Loc AccountView_Header_Memo}" SortMemberPath="Memo" Width="*" x:Name="MemoColumn">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource MemoColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource MemoEditingColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!-- Sum -->
                <DataGridTemplateColumn Header="{lex:Loc AccountView_Header_Sum}" SortMemberPath="Sum" IsReadOnly="False" x:Name="SumColumn">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SumColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SumEditingColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!-- Cleared -->
                <DataGridTemplateColumn Header="{lex:Loc AccountView_Header_Cleared}" SortMemberPath="Cleared" IsReadOnly="True" x:Name="ClearedColumn">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource ClearedColumnTemplate}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <ContentControl Content="{Binding}" HorizontalAlignment="Left">
                        <ContentControl.Margin>
                            <MultiBinding Converter="{x:Static mvvm:Converters.WidthsToLeftMargin}">
                                <Binding Path="Width" Source="{x:Reference SymbolColumn}"/>
                                <Binding Path="Width" Source="{x:Reference AccountColumn}"/>
                                <Binding Path="Width" Source="{x:Reference DateColumn}"/>
                                <Binding Path="Width" Source="{x:Reference PayeeColumn}"/>
                            </MultiBinding>
                        </ContentControl.Margin>
                        <ContentControl.Width>
                            <MultiBinding Converter="{x:Static mvvm:Converters.WidthsToDouble}">
                                <Binding Path="Width" Source="{x:Reference CategoryColumn}"/>
                                <Binding Path="Width" Source="{x:Reference MemoColumn}"/>
                                <Binding Path="Width" Source="{x:Reference SumColumn}"/>
                                <Binding Path="Width" Source="{x:Reference ClearedColumn}"/>
                            </MultiBinding>
                        </ContentControl.Width>
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type forModels:ParentTransactionViewModel}">
                                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SubElementsShowFormTemplate}"/>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type forModels:ParentIncomeViewModel}">
                                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SubElementsShowFormTemplate}"/>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type structure:TitLikeViewModel}">
                                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource EmptyDataTemplate}"/>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
        
        <!-- EditingForm -->
        
        <!-- The Editing-Form -->
        <StackPanel Grid.Row="1">
            <DataGrid Name="NewTitGrid" ItemsSource="{Binding NewTits}" HeadersVisibility="None" BorderThickness="0,2,0,0" MaxHeight="200"
                      Width="{Binding ActualWidth ,ElementName=TitGrid}" RowDetailsVisibilityMode="Visible">
                <DataGrid.Columns>
                    <!-- Symbol -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference SymbolColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SymbolColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!-- Account -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference AccountColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource AccountEditingColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!-- Date -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference DateColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource DateEditingColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!-- Payee -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference PayeeColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource PayeeEditingColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!-- Category -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference CategoryColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource CategoryEditingColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!-- Memo -->
                    <DataGridTemplateColumn Width="{Binding Width, Source={x:Reference MemoColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource MemoEditingColumnTemplate}">
                                </ContentControl>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!-- Sum -->
                    <DataGridTemplateColumn IsReadOnly="False" Width="{Binding Width, Source={x:Reference SumColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SumEditingColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!-- Cleared -->
                    <DataGridTemplateColumn IsReadOnly="True" Width="{Binding Width, Source={x:Reference ClearedColumn}, Mode=TwoWay}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource ClearedColumnTemplate}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding}" HorizontalAlignment="Left">
                            <ContentControl.Margin>
                                <MultiBinding Converter="{x:Static mvvm:Converters.WidthsToLeftMargin}">
                                    <Binding Path="Width" Source="{x:Reference SymbolColumn}"/>
                                    <Binding Path="Width" Source="{x:Reference AccountColumn}"/>
                                    <Binding Path="Width" Source="{x:Reference DateColumn}"/>
                                    <Binding Path="Width" Source="{x:Reference PayeeColumn}"/>
                                </MultiBinding>
                            </ContentControl.Margin>
                            <ContentControl.Width>
                                <MultiBinding Converter="{x:Static mvvm:Converters.WidthsToDouble}">
                                    <Binding Path="Width" ElementName="CategoryColumn"/>
                                    <Binding Path="Width" Source="{x:Reference MemoColumn}"/>
                                    <Binding Path="Width" Source="{x:Reference SumColumn}"/>
                                    <Binding Path="Width" Source="{x:Reference ClearedColumn}"/>
                                </MultiBinding>
                            </ContentControl.Width>
                            <ContentControl.Resources>
                                <DataTemplate DataType="{x:Type forModels:ParentTransactionViewModel}">
                                    <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SubElementsEditingFormTemplate}"/>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type forModels:ParentIncomeViewModel}">
                                    <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SubElementsEditingFormTemplate}"/>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type structure:TitLikeViewModel}">
                                    <ContentControl Content="{Binding}" ContentTemplate="{StaticResource EmptyDataTemplate}"/>
                                </DataTemplate>
                            </ContentControl.Resources>
                        </ContentControl>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>
            </DataGrid>
            <DockPanel>
                <Button ToolTip="{lex:Loc AccountView_ToolTip_NewTransaction}" Command="{Binding NewTransactionCommand}" Visibility="{Binding NewTransactionVisibility}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial Kind="{StaticResource AddIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource BlackColorBrush}" />
                        <iconPacks:PackIconMaterial Kind="{StaticResource TransactionIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource TransactionBrush}" />
                    </StackPanel>
                </Button>
                <Button ToolTip="{lex:Loc AccountView_ToolTip_NewIncome}" Command="{Binding NewIncomeCommand}" Visibility="{Binding NewIncomeVisibility}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial Kind="{StaticResource AddIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource BlackColorBrush}" />
                        <iconPacks:PackIconMaterial Kind="{StaticResource IncomeIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource IncomeBrush}" />
                    </StackPanel>
                </Button>
                <Button ToolTip="{lex:Loc AccountView_ToolTip_NewTransfer}" Command="{Binding NewTransferCommand}" Visibility="{Binding NewTransferVisibility}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial Kind="{StaticResource AddIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource BlackColorBrush}" />
                        <iconPacks:PackIconMaterial Kind="{StaticResource TransferIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource TransferBrush}" />
                    </StackPanel>
                </Button>
                <Button ToolTip="{lex:Loc AccountView_ToolTip_NewParentTransaction}" Command="{Binding NewParentTransactionCommand}" Visibility="{Binding NewParentTransactionVisibility}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial Kind="{StaticResource AddIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource BlackColorBrush}" />
                        <iconPacks:PackIconMaterial Kind="{StaticResource ParentIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource BlackColorBrush}" />
                        <iconPacks:PackIconMaterial Kind="{StaticResource TransactionIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource TransactionBrush}" />
                    </StackPanel>
                </Button>
                <Button ToolTip="{lex:Loc AccountView_ToolTip_NewParentIncome}" Command="{Binding NewParentIncomeCommand}" Visibility="{Binding NewParentIncomeVisibility}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial Kind="{StaticResource AddIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource BlackColorBrush}" />
                        <iconPacks:PackIconMaterial Kind="{StaticResource ParentIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource BlackColorBrush}" />
                        <iconPacks:PackIconMaterial Kind="{StaticResource IncomeIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource IncomeBrush}" />
                    </StackPanel>
                </Button>
                <Button ToolTip="{lex:Loc AccountView_ToolTip_AddToTable}" Command="{Binding ApplyCommand}" HorizontalAlignment="Right" Visibility="{Binding ApplyVisibility}">
                    <iconPacks:PackIconMaterial Kind="{StaticResource AddToTableIcon}" Height="{StaticResource IconSize}" Width="{StaticResource IconSize}" Foreground="{DynamicResource BlackColorBrush}" />
                </Button>
            </DockPanel>
        </StackPanel>
    </Grid>
</UserControl>































































































































