<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hm="clr-namespace:HamburgerMenu;assembly=HamburgerMenu"
                    xmlns:mvvm="clr-namespace:BFF.MVVM">
    <Style BasedOn="{StaticResource {x:Type hm:HamburgerMenu}}"
           TargetType="{x:Type hm:HamburgerMenu}">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
        <Setter Property="Background"
                Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="IconLength"
                Value="48" />
        <Setter Property="Icon">
            <Setter.Value>
                <Viewbox Margin="5"
                         HorizontalAlignment="Left">
                    <!--  Material => Hamburger  -->
                    <Path Data="M2,16H22V18C22,19.11 21.11,20 20,20H4C2.89,20 2,19.11 2,18V16M6,4H18C20.22,4 22,5.78 22,8V10H2V8C2,5.78 3.78,4 6,4M4,11H15L17,13L19,11H20C21.11,11 22,11.89 22,13C22,14.11 21.11,15 20,15H4C2.89,15 2,14.11 2,13C2,11.89 2.89,11 4,11Z"
                          Fill="{DynamicResource BlackBrush}"
                          SnapsToDevicePixels="False"
                          Stretch="Uniform"
                          UseLayoutRounding="False" />
                </Viewbox>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type hm:HamburgerMenu}">
                    <Grid x:Name="templateRoot"
                          ClipToBounds="true"
                          KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{TemplateBinding IconLength,
                                                                      Converter={x:Static mvvm:Converters.DoubleToGridLength}}" />
                            <ColumnDefinition x:Name="middleColumn" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="sideMenu"
                              Grid.Row="0"
                              Grid.Column="0"
                              HorizontalAlignment="Left"
                              Panel.ZIndex="9999"
                              Background="{TemplateBinding Background}">
                            <StackPanel Orientation="Vertical">
                                <Button x:Name="PART_HamburgerButton"
                                        Width="{TemplateBinding IconLength}"
                                        Height="{TemplateBinding IconLength}"
                                        Margin="0"
                                        Padding="0"
                                        HorizontalAlignment="Left"
                                        BorderThickness="0"
                                        Foreground="{DynamicResource BlackBrush}">
                                    <ContentPresenter ContentSource="Icon"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Button>
                                <hm:HamburgerMenuPanel HorizontalAlignment="Left"
                                                       Background="Transparent"
                                                       IsItemsHost="true"
                                                       KeyboardNavigation.TabIndex="1" />
                            </StackPanel>
                        </Grid>
                        <DockPanel Grid.Row="0"
                                   Grid.Column="2"
                                   LastChildFill="True">
                            <Grid x:Name="contentHeader"
                                  Height="{TemplateBinding IconLength}"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  DockPanel.Dock="Top">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  ContentSource="SelectedContentHeader" />
                            </Grid>
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    DockPanel.Dock="Bottom"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2"
                                    KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  Margin="{TemplateBinding Padding}"
                                                  ContentSource="SelectedContent"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="templateRoot"
                                    Property="TextElement.Foreground"
                                    Value="{DynamicResource WhiteBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPaneOpen"
                                           Value="True" />
                                <Condition Property="IsOverlaying"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="middleColumn"
                                    Property="Width"
                                    Value="Auto" />
                            <Setter TargetName="sideMenu"
                                    Property="Grid.ColumnSpan"
                                    Value="2" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPaneOpen"
                                           Value="False" />
                                <Condition Property="IsOverlaying"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="middleColumn"
                                    Property="Width"
                                    Value="0" />
                            <Setter TargetName="sideMenu"
                                    Property="Grid.ColumnSpan"
                                    Value="2" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPaneOpen"
                                           Value="True" />
                                <Condition Property="IsOverlaying"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="middleColumn"
                                    Property="Width"
                                    Value="0" />
                            <Setter TargetName="sideMenu"
                                    Property="Grid.ColumnSpan"
                                    Value="3" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPaneOpen"
                                           Value="False" />
                                <Condition Property="IsOverlaying"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="middleColumn"
                                    Property="Width"
                                    Value="0" />
                            <Setter TargetName="sideMenu"
                                    Property="Grid.ColumnSpan"
                                    Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsContentHeaderSet"
                                 Value="True">
                            <Setter TargetName="contentHeader"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsContentHeaderSet"
                                 Value="False">
                            <Setter TargetName="contentHeader"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger SourceName="PART_HamburgerButton"
                                 Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="PART_HamburgerButton"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush3}" />
                        </Trigger>
                        <Trigger SourceName="PART_HamburgerButton"
                                 Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="PART_HamburgerButton"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource BlackBrush}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource {x:Type hm:HamburgerMenuItem}}"
           TargetType="{x:Type hm:HamburgerMenuItem}">
        <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
        <Setter Property="Background"
                Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type hm:HamburgerMenuItem}">
                    <Grid x:Name="templateRoot"
                          Height="{TemplateBinding IconLength}"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{TemplateBinding IconLength,
                                                                      Converter={x:Static mvvm:Converters.DoubleToGridLength}}" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Grid.Column="0"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          ContentSource="Icon"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          ContentSource="Header"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush2}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="False" />
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>