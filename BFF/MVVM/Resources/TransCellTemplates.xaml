<ResourceDictionary x:Class="BFF.MVVM.Resources.TransCellTemplates"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:forModels="clr-namespace:BFF.MVVM.ViewModels.ForModels"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:lex="http://wpflocalizeextension.codeplex.com"
                    xmlns:mvvm="clr-namespace:BFF.MVVM"
                    xmlns:structure="clr-namespace:BFF.MVVM.ViewModels.ForModels.Structure"
                    xmlns:utility="clr-namespace:BFF.MVVM.ViewModels.ForModels.Utility"
                    xmlns:views="clr-namespace:BFF.MVVM.Views">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/MVVM/Resources/BFF_ModifiedMAMCheckBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="CellContent"
           TargetType="ContentControl">
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="MinHeight"
                Value="30" />
        <Setter Property="IsTabStop"
                Value="False" />
    </Style>

    <DataTemplate x:Key="ParentTransactionToolTipTemplate"
                  DataType="{x:Type forModels:ParentTransactionViewModel}">
        <DataGrid ItemsSource="{Binding SubElements}">
            <DataGrid.Columns>
                <!--  Category  -->
                <DataGridTextColumn Binding="{Binding Category.Value.Name.Value}"
                                    Header="{lex:Loc AccountView_Header_Category}" />
                <!--  Category  -->
                <DataGridTextColumn Binding="{Binding Memo.Value}"
                                    Header="{lex:Loc AccountView_Header_Memo}" />
                <!--  Sum  -->
                <DataGridTemplateColumn Header="{lex:Loc AccountView_Header_Sum}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Foreground="{Binding Sum.Value, Converter={x:Static mvvm:Converters.SumToSolidColorBrush}}"
                                       Text="{Binding Sum.Value, Converter={x:Static mvvm:Converters.SumToString}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </DataTemplate>

    <!--  Symbol  -->
    <DataTemplate x:Key="SymbolColumnTemplate">
        <ContentControl Content="{Binding}"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type forModels:TransactionViewModel}">
                    <iconPacks:PackIconMaterial>
                        <iconPacks:PackIconMaterial.Style>
                            <Style BasedOn="{StaticResource CellIconMaterial}"
                                   TargetType="{x:Type iconPacks:PackIconMaterial}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Category.Value, Converter={x:Static mvvm:Converters.OfType}, ConverterParameter={x:Type forModels:IncomeCategoryViewModel}}"
                                                 Value="True">
                                        <Setter Property="Kind"
                                                Value="{StaticResource IncomeIcon}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource IncomeBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Kind"
                                        Value="{StaticResource TransactionIcon}" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource TransactionBrush}" />
                            </Style>
                        </iconPacks:PackIconMaterial.Style>
                    </iconPacks:PackIconMaterial>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:ParentTransactionViewModel}">
                    <iconPacks:PackIconMaterial Foreground="{DynamicResource TransactionBrush}"
                                                Kind="{StaticResource TransactionIcon}"
                                                Style="{StaticResource CellIconMaterial}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                    <iconPacks:PackIconMaterial Foreground="{DynamicResource TransferBrush}"
                                                Kind="{StaticResource TransferIcon}"
                                                Style="{StaticResource CellIconMaterial}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}">
                    <iconPacks:PackIconMaterial Foreground="{DynamicResource BlackBrush}"
                                                Kind="{StaticResource PlaceholderIcon}"
                                                Style="{StaticResource CellIconMaterial}" />
                </DataTemplate>
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <!--  Account  -->
    <DataTemplate x:Key="AccountColumnTemplate">
        <ContentControl Content="{Binding}"
                        IsTabStop="True"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type structure:TransactionBaseViewModel}">
                    <TextBlock Style="{StaticResource CellTextBlock}"
                               Text="{Binding Account.Value.Name.Value}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                    <TextBlock Foreground="{DynamicResource GrayBrush4}"
                               Style="{StaticResource CellTextBlock}"
                               Text="{lex:Loc AccountView_Column_Transfer}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="AccountEditingColumnTemplate">
        <ContentControl Content="{Binding}"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type structure:TransactionBaseViewModel}">
                    <ComboBox DisplayMemberPath="Name.Value"
                              IsEditable="True"
                              IsTextSearchCaseSensitive="False"
                              IsTextSearchEnabled="True"
                              ItemsSource="{Binding AllAccounts}"
                              TextSearch.TextPath="Name.Value">
                        <ComboBox.SelectedItem>
                            <Binding Mode="TwoWay"
                                     Path="Account.Value"
                                     UpdateSourceTrigger="LostFocus" />
                        </ComboBox.SelectedItem>
                    </ComboBox>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                    <TextBlock Foreground="{DynamicResource GrayBrush4}"
                               Style="{StaticResource CellTextBlock}"
                               Text="{lex:Loc AccountView_Column_Transfer}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <!--  Date  -->
    <DataTemplate x:Key="DateColumnTemplate">
        <ContentControl Content="{Binding}"
                        IsTabStop="True"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type structure:TransBaseViewModel}">
                    <TextBlock Style="{StaticResource CellTextBlock}"
                               Text="{Binding Date.Value, Converter={x:Static mvvm:Converters.DateTimeToString}}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type utility:CsvBankStatementImportItemViewModel}">
                    <ContentControl Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasDate.Value}"
                                                 Value="True">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Margin="0,2.5"
                                                               Style="{StaticResource CellTextBlock}"
                                                               Text="{Binding Date.Value, Converter={x:Static mvvm:Converters.DateTimeToString}}" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="ContentTemplate"
                                        Value="{StaticResource EmptyDataTemplate}" />
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="DateEditingColumnTemplate">
        <ContentControl Content="{Binding}"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type structure:TransBaseViewModel}">
                    <DatePicker VerticalContentAlignment="Center"
                                SelectedDate="{Binding Date.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectedDateFormat="{Binding DataContext.IsDateLong, ElementName=LayoutRoot, Converter={x:Static mvvm:Converters.BooleanToDatePickerFormat}}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type utility:CsvBankStatementImportItemViewModel}">
                    <ContentControl Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasDate.Value}"
                                                 Value="True">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <DockPanel LastChildFill="True">
                                                        <Button Margin="0,2.5"
                                                                Command="{Binding DismissDate}"
                                                                Content="X"
                                                                DockPanel.Dock="Right" />
                                                        <DatePicker Margin="0,2.5"
                                                                    VerticalContentAlignment="Center"
                                                                    DockPanel.Dock="Left"
                                                                    SelectedDate="{Binding Date.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                    SelectedDateFormat="{Binding IsDateFormatLong, Converter={x:Static mvvm:Converters.BooleanToDatePickerFormat}}" />
                                                    </DockPanel>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Button Margin="0,2.5"
                                                    HorizontalAlignment="Right"
                                                    Command="{Binding AdmitDate}"
                                                    Content="+" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <!--  Flag  -->
    <DataTemplate x:Key="FlagColumnTemplate">
        <ContentControl Content="{Binding}"
                        IsTabStop="True"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type structure:TransBaseViewModel}">
                    <ContentControl Content="{Binding Flag.Value}"
                                    ContentTemplate="{StaticResource FlagTemplate}">
                        <ContentControl.Style>
                            <Style BasedOn="{StaticResource {x:Type ContentControl}}"
                                   TargetType="{x:Type ContentControl}">
                                <Style.Triggers>
                                    <Trigger Property="Content"
                                             Value="{x:Null}">
                                        <Setter Property="Visibility"
                                                Value="Collapsed" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="FlagEditingColumnTemplate">
        <ContentControl Content="{Binding}"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type structure:TransBaseViewModel}">
                    <DockPanel LastChildFill="True">
                        <Button Click="OpenFlagPopup_OnClick"
                                DockPanel.Dock="Right"
                                TabIndex="1"
                                ToolTip="{lex:Loc CreateNewFlag}">
                            <iconPacks:PackIconMaterial Foreground="{DynamicResource BlackColorBrush}"
                                                        Kind="{StaticResource AddIcon}"
                                                        Style="{StaticResource CellIconMaterial}" />
                        </Button>
                        <Popup x:Name="Popup"
                               Closed="Popup_OnClosed"
                               Placement="Right"
                               PlacementTarget="{Binding ElementName=EditFlagComboBox}"
                               PopupAnimation="Slide"
                               PreviewKeyDown="Popup_OnPreviewKeyDown"
                               StaysOpen="False">
                            <views:NewFlagView DataContext="{Binding NewFlagViewModel}"
                                               OnAddClicked="ClosePopup_OnClick"
                                               Tag="{Binding ElementName=Popup}" />
                        </Popup>
                        <Button Command="{Binding RemoveFlag}"
                                Content="X"
                                DockPanel.Dock="Right"
                                TabIndex="1">
                            <Button.Style>
                                <Style BasedOn="{StaticResource {x:Type Button}}"
                                       TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Flag.Value}"
                                                     Value="{x:Null}">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <ComboBox x:Name="EditFlagComboBox"
                                  HorizontalAlignment="Stretch"
                                  DockPanel.Dock="Left"
                                  ItemsSource="{Binding AllFlags}"
                                  SelectedItem="{Binding Mode=TwoWay, Path=Flag.Value, UpdateSourceTrigger=LostFocus}"
                                  TabIndex="0">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <iconPacks:PackIconMaterial Foreground="{Binding Color.Value}"
                                                                    Kind="{StaticResource FlagIcon}"
                                                                    Style="{StaticResource CellIconMaterial}" />
                                        <TextBlock Margin="5,0,0,0"
                                                   Text="{Binding Name.Value}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </DockPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <!--  CheckNumber  -->
    <DataTemplate x:Key="CheckNumberColumnTemplate">
        <ContentControl Content="{Binding}"
                        IsTabStop="True"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type structure:TransBaseViewModel}">
                    <TextBlock Style="{StaticResource CellTextBlock}"
                               Text="{Binding CheckNumber.Value}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="CheckNumberEditingColumnTemplate">
        <ContentControl Content="{Binding}"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type structure:TransBaseViewModel}">
                    <TextBox VerticalAlignment="Stretch"
                             VerticalContentAlignment="Center"
                             Text="{Binding CheckNumber.Value, UpdateSourceTrigger=LostFocus}"
                             TextWrapping="NoWrap" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <!--  Payee  -->
    <DataTemplate x:Key="PayeeColumnTemplate">
        <ContentControl HorizontalAlignment="Stretch"
                        Content="{Binding}"
                        IsTabStop="True"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type structure:TransactionBaseViewModel}">
                    <ContentControl Content="{Binding Payee.Value}">
                        <ContentControl.Style>
                            <Style BasedOn="{StaticResource CellContent}"
                                   TargetType="ContentControl">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <TextBlock Style="{StaticResource CellTextBlock}"
                                                       Text="{Binding Name.Value}" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Content}"
                                                 Value="{x:Null}">
                                        <Setter Property="ContentControl.ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Foreground="{StaticResource TransferBrush}"
                                                               Opacity="0.75"
                                                               Style="{StaticResource CellTextBlock}"
                                                               Text="{lex:LocText General_Unassigned,
                                                                                  Prefix=(,
                                                                                  Suffix=)}" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{StaticResource CellTextBlock}"
                                   Text="{Binding FromAccount.Value.Name.Value}" />
                        <iconPacks:PackIconMaterial Foreground="{DynamicResource GrayBrush4}"
                                                    Kind="{StaticResource TransactionIcon}"
                                                    Style="{StaticResource CellIconMaterial}" />
                    </StackPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type utility:CsvBankStatementImportItemViewModel}">
                    <ContentControl Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasPayee.Value}"
                                                 Value="True">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <DockPanel LastChildFill="True">
                                                        <views:AlertSymbol Visibility="{Binding PayeeExists.Value, Converter={x:Static mvvm:Converters.TrueToCollapsed}}"
                                                                           VerticalAlignment="Center"
                                                                           DockPanel.Dock="Right" />
                                                        <TextBlock Margin="0,2.5"
                                                                   DockPanel.Dock="Left"
                                                                   Style="{StaticResource CellTextBlock}"
                                                                   Text="{Binding Payee.Value, Mode=OneWay}" />
                                                    </DockPanel>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="ContentTemplate"
                                        Value="{StaticResource EmptyDataTemplate}" />
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="PayeeEditingColumnTemplate">
        <ContentControl HorizontalAlignment="Stretch"
                        Content="{Binding}"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type structure:TransactionBaseViewModel}">
                    <DockPanel LastChildFill="True">
                        <Button Click="OpenPayeePopup_OnClick"
                                DockPanel.Dock="Right"
                                TabIndex="1"
                                ToolTip="{lex:Loc CreateNewPayee}">
                            <iconPacks:PackIconMaterial Foreground="{DynamicResource BlackColorBrush}"
                                                        Kind="{StaticResource AddIcon}"
                                                        Style="{StaticResource CellIconMaterial}" />
                        </Button>
                        <Popup x:Name="Popup"
                               Closed="Popup_OnClosed"
                               Placement="Right"
                               PlacementTarget="{Binding ElementName=EditPayeeComboBox}"
                               PopupAnimation="Slide"
                               PreviewKeyDown="Popup_OnPreviewKeyDown"
                               StaysOpen="False">
                            <views:NewPayeeView DataContext="{Binding NewPayeeViewModel}"
                                                OnAddClicked="ClosePopup_OnClick"
                                                Tag="{Binding ElementName=Popup}" />
                        </Popup>
                        <ComboBox x:Name="EditPayeeComboBox"
                                  DisplayMemberPath="Name.Value"
                                  IsEditable="True"
                                  IsTextSearchCaseSensitive="True"
                                  IsTextSearchEnabled="True"
                                  ItemsSource="{Binding NewPayeeViewModel.AllPayees}"
                                  ShouldPreserveUserEnteredPrefix="True"
                                  TabIndex="0"
                                  TextSearch.TextPath="Name.Value">
                            <ComboBox.SelectedItem>
                                <Binding Mode="TwoWay"
                                         Path="Payee.Value"
                                         UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <x:Static Member="mvvm:Rules.EmptyPayee" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </ComboBox.SelectedItem>
                        </ComboBox>
                    </DockPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                    <ComboBox DisplayMemberPath="Name.Value"
                              IsEditable="True"
                              IsTextSearchCaseSensitive="False"
                              IsTextSearchEnabled="True"
                              ItemsSource="{Binding AllAccounts}"
                              TextSearch.TextPath="Name.Value">
                        <ComboBox.SelectedItem>
                            <Binding Mode="TwoWay"
                                     Path="FromAccount.Value"
                                     UpdateSourceTrigger="LostFocus" />
                        </ComboBox.SelectedItem>
                    </ComboBox>
                </DataTemplate>
                <DataTemplate DataType="{x:Type utility:CsvBankStatementImportItemViewModel}">
                    <ContentControl Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasPayee.Value}"
                                                 Value="True">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <DockPanel LastChildFill="True">
                                                        <Button Margin="0,2.5"
                                                                Command="{Binding DismissPayee}"
                                                                Content="X"
                                                                DockPanel.Dock="Right" />
                                                        <views:AlertSymbol Visibility="{Binding PayeeExists.Value, Converter={x:Static mvvm:Converters.TrueToCollapsed}}"
                                                                           VerticalAlignment="Center"
                                                                           DockPanel.Dock="Right" />
                                                        <ComboBox DisplayMemberPath="Name.Value"
                                                                  DockPanel.Dock="Right"
                                                                  IsEditable="True"
                                                                  IsTextSearchCaseSensitive="True"
                                                                  IsTextSearchEnabled="True"
                                                                  ItemsSource="{Binding ExistingPayees}"
                                                                  Text="{Binding Payee.Value}" />
                                                    </DockPanel>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Button Margin="0,2.5"
                                                    HorizontalAlignment="Right"
                                                    Command="{Binding AdmitPayee}"
                                                    Content="+" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <!--  Category  -->
    <DataTemplate x:Key="CategoryColumnTemplate">
        <ContentControl Content="{Binding}"
                        IsTabStop="True"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type structure:TransLikeViewModel}">
                    <ContentControl>
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Setter Property="Content"
                                        Value="{Binding Category.Value}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Content}"
                                                 Value="{x:Null}">
                                        <Setter Property="ContentControl.ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Foreground="{StaticResource TransferBrush}"
                                                               Opacity="0.75"
                                                               Style="{StaticResource CellTextBlock}"
                                                               Text="{lex:LocText General_Unassigned,
                                                                                  Prefix=(,
                                                                                  Suffix=)}" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type forModels:CategoryViewModel}">
                                <TextBlock Style="{StaticResource CellTextBlock}"
                                           Text="{Binding Path=Name.Value}">
                                    <TextBlock.ToolTip>
                                        <ToolTip>
                                            <ListBox ItemTemplate="{StaticResource CategoryItemTemplate}"
                                                     ItemsSource="{Binding FullChainOfCategories}">
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                            </ListBox>
                                        </ToolTip>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type forModels:IncomeCategoryViewModel}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Style="{StaticResource CellTextBlock}"
                                               Text="{Binding Name.Value}">
                                        <TextBlock.ToolTip>
                                            <ToolTip>
                                                <ListBox ItemTemplate="{StaticResource CategoryItemTemplate}"
                                                         ItemsSource="{Binding FullChainOfCategories}">
                                                    <ListBox.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <StackPanel Orientation="Horizontal" />
                                                        </ItemsPanelTemplate>
                                                    </ListBox.ItemsPanel>
                                                </ListBox>
                                            </ToolTip>
                                        </TextBlock.ToolTip>
                                    </TextBlock>
                                    <iconPacks:PackIconMaterial Foreground="{StaticResource IncomeBrush}"
                                                                Kind="{StaticResource IncomeIcon}"
                                                                Opacity="0.75"
                                                                Style="{StaticResource CellIconMaterial}" />
                                </StackPanel>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:ParentTransactionViewModel}">
                    <Button Margin="0"
                            Padding="0"
                            HorizontalContentAlignment="Left"
                            Background="Transparent"
                            BorderThickness="0"
                            Command="{Binding OpenParentTransactionView}"
                            CommandParameter="{Binding Account.Value}">
                        <Button.ToolTip>
                            <ToolTip Visibility="{Binding SubElements, Converter={x:Static mvvm:Converters.NoneToCollapsed}}">
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource ParentTransactionToolTipTemplate}" />
                            </ToolTip>
                        </Button.ToolTip>
                        <iconPacks:PackIconMaterial Margin="5,0,0,0"
                                                    Foreground="{DynamicResource GrayBrush4}"
                                                    Kind="{StaticResource ParentIcon}"
                                                    Style="{StaticResource CellIconMaterial}" />
                    </Button>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{StaticResource CellTextBlock}"
                                   Text="{Binding ToAccount.Value.Name.Value}" />
                        <iconPacks:PackIconMaterial Foreground="{DynamicResource GrayBrush4}"
                                                    IsTabStop="True"
                                                    Kind="{StaticResource IncomeIcon}"
                                                    Style="{StaticResource CellIconMaterial}" />
                    </StackPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="CategoryEditingColumnTemplate">
        <ContentControl Content="{Binding}"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type structure:TransLikeViewModel}">
                    <DockPanel LastChildFill="True">
                        <Button Click="OpenCategoryPopup_OnClick"
                                DockPanel.Dock="Right"
                                TabIndex="1"
                                ToolTip="{lex:Loc CreateNewCategory}">
                            <iconPacks:PackIconMaterial Foreground="{DynamicResource BlackColorBrush}"
                                                        Kind="{StaticResource AddIcon}"
                                                        Style="{StaticResource CellIconMaterial}" />
                        </Button>
                        <Popup x:Name="Popup"
                               Closed="Popup_OnClosed"
                               Placement="Right"
                               PlacementTarget="{Binding ElementName=EditCategoryComboBox}"
                               PopupAnimation="Slide"
                               PreviewKeyDown="Popup_OnPreviewKeyDown"
                               StaysOpen="False">
                            <Border MinWidth="50"
                                    Padding="0"
                                    BorderBrush="{StaticResource AccentColorBrush}"
                                    BorderThickness="1">
                                <views:NewCategoryView DataContext="{Binding NewCategoryViewModel}"
                                                       OnAddClicked="ClosePopup_OnClick"
                                                       Tag="{Binding ElementName=Popup}" />
                            </Border>
                        </Popup>
                        <ComboBox x:Name="EditCategoryComboBox"
                                  IsEditable="True"
                                  IsTextSearchCaseSensitive="True"
                                  IsTextSearchEnabled="True"
                                  ItemTemplate="{StaticResource IndentedCategoryItemTemplate}"
                                  ItemsSource="{Binding NewCategoryViewModel.All}"
                                  ShouldPreserveUserEnteredPrefix="True"
                                  TabIndex="0"
                                  TextSearch.TextPath="Name.Value">
                            <ComboBox.SelectedItem>
                                <Binding Mode="TwoWay"
                                         Path="Category.Value"
                                         UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <x:Static Member="mvvm:Rules.EmptyCategory" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </ComboBox.SelectedItem>
                            <ComboBox.ToolTip>
                                <ToolTip>
                                    <ListBox ItemTemplate="{StaticResource CategoryItemTemplate}"
                                             ItemsSource="{Binding Category.Value.FullChainOfCategories}">
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                    </ListBox>
                                </ToolTip>
                            </ComboBox.ToolTip>
                        </ComboBox>
                    </DockPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:ParentTransactionViewModel}">
                    <Button Margin="0"
                            Padding="0"
                            HorizontalContentAlignment="Left"
                            Background="Transparent"
                            BorderThickness="0"
                            Command="{Binding OpenParentTransactionView}"
                            CommandParameter="{Binding Account.Value}">
                        <Button.ToolTip>
                            <ToolTip Visibility="{Binding SubElements, Converter={x:Static mvvm:Converters.NoneToCollapsed}}">
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource ParentTransactionToolTipTemplate}" />
                            </ToolTip>
                        </Button.ToolTip>
                        <iconPacks:PackIconMaterial Margin="5,0,0,0"
                                                    Foreground="{DynamicResource GrayBrush4}"
                                                    Kind="{StaticResource ParentIcon}"
                                                    Style="{StaticResource CellIconMaterial}" />
                    </Button>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                    <ComboBox DisplayMemberPath="Name.Value"
                              IsEditable="True"
                              IsTextSearchCaseSensitive="False"
                              IsTextSearchEnabled="True"
                              ItemsSource="{Binding AllAccounts}"
                              TextSearch.TextPath="Name.Value">
                        <ComboBox.SelectedItem>
                            <Binding Mode="TwoWay"
                                     Path="ToAccount.Value"
                                     UpdateSourceTrigger="LostFocus" />
                        </ComboBox.SelectedItem>
                    </ComboBox>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="ParentCategoryEditingColumnTemplate"
                  DataType="{x:Type forModels:ParentTransactionViewModel}">
        <iconPacks:PackIconMaterial Margin="5,0,0,0"
                                    Foreground="{DynamicResource GrayBrush4}"
                                    Kind="{StaticResource ParentIcon}"
                                    Style="{StaticResource CellIconMaterial}" />
    </DataTemplate>
    <!--  Memo  -->
    <DataTemplate x:Key="MemoColumnTemplate">
        <ContentControl Content="{Binding}"
                        IsTabStop="True"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type structure:TransLikeViewModel}">
                    <TextBlock Style="{StaticResource CellTextBlock}"
                               Text="{Binding Memo.Value, Mode=OneWay}"
                               TextTrimming="CharacterEllipsis"
                               ToolTip="{Binding Memo.Value}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type utility:CsvBankStatementImportItemViewModel}">
                    <ContentControl Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasMemo.Value}"
                                                 Value="True">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Margin="0,2.5"
                                                               Style="{StaticResource CellTextBlock}"
                                                               Text="{Binding Memo.Value, Mode=OneWay}"
                                                               TextTrimming="CharacterEllipsis"
                                                               ToolTip="{Binding Memo.Value}" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="ContentTemplate"
                                        Value="{StaticResource EmptyDataTemplate}" />
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </DataTemplate>
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="MemoEditingColumnTemplate">
        <ContentControl Content="{Binding}"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type structure:TransLikeViewModel}">
                    <TextBox VerticalAlignment="Stretch"
                             VerticalContentAlignment="Center"
                             Focusable="True"
                             Text="{Binding Memo.Value, UpdateSourceTrigger=LostFocus}"
                             TextWrapping="NoWrap" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type utility:CsvBankStatementImportItemViewModel}">
                    <ContentControl Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasMemo.Value}"
                                                 Value="True">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <DockPanel LastChildFill="True">
                                                        <Button Margin="0,2.5"
                                                                Command="{Binding DismissMemo}"
                                                                Content="X"
                                                                DockPanel.Dock="Right" />
                                                        <TextBox Margin="0,2.5"
                                                                 VerticalAlignment="Stretch"
                                                                 VerticalContentAlignment="Center"
                                                                 DockPanel.Dock="Left"
                                                                 Focusable="True"
                                                                 Text="{Binding Memo.Value, UpdateSourceTrigger=LostFocus}"
                                                                 TextWrapping="NoWrap" />
                                                    </DockPanel>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Button Margin="0,2.5"
                                                    HorizontalAlignment="Right"
                                                    Command="{Binding AdmitMemo}"
                                                    Content="+" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </DataTemplate>
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <!--  Sum  -->
    <DataTemplate x:Key="SumColumnTemplate">
        <ContentControl Content="{Binding}"
                        IsTabStop="True"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                    <TextBlock Padding="0,0,5,0"
                               Style="{StaticResource CellTextBlock}"
                               TextAlignment="Right">
                        <TextBlock.Text>
                            <MultiBinding Converter="{x:Static mvvm:Converters.TransferSumAsCorrectlySignedString}">
                                <Binding ElementName="LayoutRoot"
                                         Path="DataContext.AccountViewModel" />
                                <Binding Path="FromAccount.Value" />
                                <Binding Path="ToAccount.Value" />
                                <Binding Path="Sum.Value" />
                            </MultiBinding>
                        </TextBlock.Text>
                        <TextBlock.Foreground>
                            <MultiBinding Converter="{x:Static mvvm:Converters.TransferSumToSolidColorBrush}">
                                <Binding ElementName="LayoutRoot"
                                         Path="DataContext.AccountViewModel" />
                                <Binding Path="FromAccount.Value" />
                                <Binding Path="ToAccount.Value" />
                            </MultiBinding>
                        </TextBlock.Foreground>
                    </TextBlock>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:ParentTransactionViewModel}">
                    <Button Margin="0"
                            Padding="0"
                            HorizontalContentAlignment="Stretch"
                            Background="Transparent"
                            BorderThickness="0"
                            Command="{Binding OpenParentTransactionView}"
                            CommandParameter="{Binding Account.Value}">
                        <Button.ToolTip>
                            <ToolTip Visibility="{Binding SubElements, Converter={x:Static mvvm:Converters.NoneToCollapsed}}">
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource ParentTransactionToolTipTemplate}" />
                            </ToolTip>
                        </Button.ToolTip>
                        <ContentControl>
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsInserted.Value}"
                                                     Value="False">
                                            <Setter Property="Content"
                                                    Value="{Binding TotalSum.Value}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Content"
                                            Value="{Binding Sum.Value}" />
                                </Style>
                            </ContentControl.Style>
                            <ContentControl.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock Padding="0,0,5,0"
                                               Foreground="{Binding ., Converter={x:Static mvvm:Converters.SumToSolidColorBrush}}"
                                               Style="{StaticResource CellTextBlock}"
                                               Text="{Binding ., Converter={x:Static mvvm:Converters.SumToString}}"
                                               TextAlignment="Right" />
                                </DataTemplate>
                            </ContentControl.ContentTemplate>
                        </ContentControl>
                    </Button>
                </DataTemplate>
                <DataTemplate DataType="{x:Type structure:TransLikeViewModel}">
                    <TextBlock Padding="0,0,5,0"
                               Foreground="{Binding Sum.Value, Converter={x:Static mvvm:Converters.SumToSolidColorBrush}}"
                               Style="{StaticResource CellTextBlock}"
                               Text="{Binding Sum.Value, Converter={x:Static mvvm:Converters.SumToString}}"
                               TextAlignment="Right" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type utility:CsvBankStatementImportItemViewModel}">
                    <ContentControl Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasSum.Value}"
                                                 Value="True">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock Margin="0,2.5"
                                                               Foreground="{Binding Sum.Value, Converter={x:Static mvvm:Converters.SumToSolidColorBrush}}"
                                                               Style="{StaticResource CellTextBlock}"
                                                               Text="{Binding Sum.Value, Converter={x:Static mvvm:Converters.SumToString}}"
                                                               TextAlignment="Right" />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="ContentTemplate"
                                        Value="{StaticResource EmptyDataTemplate}" />
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="SumEditingColumnTemplate">
        <ContentControl Content="{Binding}"
                        Style="{StaticResource CellContent}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type forModels:TransferViewModel}">
                    <TextBox VerticalContentAlignment="Center"
                             TextAlignment="Right">
                        <TextBox.Foreground>
                            <MultiBinding Converter="{x:Static mvvm:Converters.TransferSumToSolidColorBrush}">
                                <Binding ElementName="LayoutRoot"
                                         Path="DataContext.AccountViewModel" />
                                <Binding Path="FromAccount.Value" />
                                <Binding Path="ToAccount.Value" />
                            </MultiBinding>
                        </TextBox.Foreground>
                        <TextBox.Text>
                            <Binding Converter="{x:Static mvvm:Converters.SumToString}"
                                     Mode="TwoWay"
                                     Path="Sum.Value"
                                     UpdateSourceTrigger="LostFocus">
                                <Binding.ValidationRules>
                                    <x:Static Member="mvvm:Rules.Currency" />
                                    <x:Static Member="mvvm:Rules.CurrencyLongRange" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:ParentTransactionViewModel}">
                    <Button Margin="0"
                            Padding="0"
                            HorizontalContentAlignment="Stretch"
                            Background="Transparent"
                            BorderThickness="0"
                            Command="{Binding OpenParentTransactionView}"
                            CommandParameter="{Binding Account.Value}">
                        <Button.ToolTip>
                            <ToolTip Visibility="{Binding SubElements, Converter={x:Static mvvm:Converters.NoneToCollapsed}}">
                                <ContentControl Content="{Binding}"
                                                ContentTemplate="{StaticResource ParentTransactionToolTipTemplate}" />
                            </ToolTip>
                        </Button.ToolTip>
                        <ContentControl>
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsInserted.Value}"
                                                     Value="False">
                                            <Setter Property="Content"
                                                    Value="{Binding TotalSum.Value}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Content"
                                            Value="{Binding Sum.Value}" />
                                </Style>
                            </ContentControl.Style>
                            <ContentControl.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock Padding="0,0,5,0"
                                               Foreground="{Binding ., Converter={x:Static mvvm:Converters.SumToSolidColorBrush}}"
                                               Style="{StaticResource CellTextBlock}"
                                               Text="{Binding ., Converter={x:Static mvvm:Converters.SumToString}}"
                                               TextAlignment="Right" />
                                </DataTemplate>
                            </ContentControl.ContentTemplate>
                        </ContentControl>
                    </Button>
                </DataTemplate>
                <DataTemplate DataType="{x:Type structure:TransLikeViewModel}">
                    <ContentControl Content="{Binding SumEdit}"
                                    ContentTemplate="{StaticResource SumEditTemplate}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type utility:CsvBankStatementImportItemViewModel}">
                    <ContentControl Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasSum.Value}"
                                                 Value="True">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <DockPanel LastChildFill="True">
                                                        <Button Margin="0,2.5"
                                                                Command="{Binding DismissSum}"
                                                                Content="X"
                                                                DockPanel.Dock="Right" />
                                                        <ContentControl Margin="0,2.5"
                                                                        Content="{Binding SumEdit}"
                                                                        ContentTemplate="{StaticResource SumEditTemplate}"
                                                                        DockPanel.Dock="Left" />
                                                    </DockPanel>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Button Margin="0,2.5"
                                                    HorizontalAlignment="Right"
                                                    Command="{Binding AdmitSum}"
                                                    Content="+" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </DataTemplate>
                <DataTemplate DataType="{x:Type forModels:TransLikeViewModelPlaceholder}" />
            </ContentControl.Resources>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="ParentSumEditingColumnTemplate"
                  DataType="{x:Type forModels:ParentTransactionViewModel}">
        <ContentControl Content="{Binding SumEdit}"
                        ContentTemplate="{StaticResource SumEditTemplate}" />
    </DataTemplate>
    <!--  Cleared  -->
    <DataTemplate x:Key="ClearedColumnTemplate">
        <CheckBox MinHeight="30"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  IsChecked="{Binding Cleared.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Style="{StaticResource BffCheckBox}" />
    </DataTemplate>
</ResourceDictionary>